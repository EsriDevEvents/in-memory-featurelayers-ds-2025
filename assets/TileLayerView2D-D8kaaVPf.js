import{bt as w,a0 as y,br as l,G as I,j as m,y as u,P as V}from"./index-Dv-JqQDv.js";import{c as H}from"./GraphicsCollection-DlcRCtU0.js";import"./GeometryUtils-CGcKgdcH.js";import"./CIMSymbolHelper-DBCkPMeB.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./vec2f32-BbH2jxlN.js";import"./floatRGBA-BTfDfCN4.js";import"./EffectView-D358IIvW.js";import"./Container-BCZInv5n.js";import"./WGLContainer-m5Dqdi-d.js";import"./vec4f32-CjrfB-0a.js";import"./Texture-BsiXXqc8.js";import"./enums-BlUEVwJR.js";import"./Program-By3cM00b.js";import"./DefaultVertexAttributeLayouts-BaFfZuup.js";import"./LabelMetric-CSrxjJk_.js";import"./StyleDefinition-BK3ROBTO.js";import"./enums-BRzLM11V.js";import"./MagnifierPrograms-DEMSTdV1.js";import"./FeatureCommandQueue-D3L0Wlvg.js";import"./UpdateTracking2D-DLChT46s.js";import"./PieChartMeshWriter-DPTepxJ3.js";import"./renderState-yUi34s5A.js";import"./interfaces-B8ge7Jg9.js";import"./testSVGPremultipliedAlpha-D_Za_c1C.js";import{V as v}from"./GraphicsView2D-C4K17d-1.js";import"./earcut-BqgeR2O3.js";import"./vec3f32-Cw9Q6TO_.js";import"./UpdatingHandles-C0Kh7aEt.js";import{r as T,o as g,n as f}from"./imageUtils-BhEmmYws.js";import{f as q}from"./LayerView2D-Ulqog2NM.js";import{h as b}from"./HighlightGraphicContainer-rrird331.js";import{h as U,m as C,r as Q}from"./TileStrategy-Bm9AEGL5.js";import{e as d}from"./TileKey-DixmkgbB.js";import{y as S}from"./LayerView-6INZgiuX.js";import{i as P}from"./RefreshableLayerView-BkpnzSC-.js";import{U as G,_ as L}from"./MapServiceLayerViewHelper-P5_-d7K2.js";import{r as k}from"./drapedUtils-nWPHxHp9.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CnE29zYd.js";import"./mat2d-C6u6dH6d.js";import"./mat2df32-orApM5a3.js";import"./vec2-DGogPjh1.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./DefaultUI-BWAdHYa0.js";import"./jsxFactory-C3RLkrq9.js";import"./InputManager-BwD1PEf3.js";import"./signal-0tlktF45.js";import"./Map-DV4_DU8O.js";import"./Ground-DpNOewuO.js";import"./CollectionFlattener-73Uag1LF.js";import"./editableLayers-V9yr_aA-.js";import"./catalogUtils-CiWgGrdS.js";import"./TablesMixin-BFT6ikAR.js";import"./ReactiveMap-DxvIcNmk.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-DKZWDFXK.js";import"./a11yUtils-DW8v-NB5.js";import"./heightModelInfoUtils-DQiO1_HQ.js";import"./ViewingMode-Dodu7ZZk.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CEs_6QlQ.js";import"./Compass-DBSyeZOs.js";import"./utils-DsJqvptN.js";import"./GoTo-BCG1WN4R.js";import"./NavigationToggle-CRz1xlJz.js";import"./Zoom-C6srvgaZ.js";import"./DisplayObject-NwP1D55U.js";import"./highlightReasons-Bl95o-z6.js";import"./Tile-BD3hIcqg.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./BufferObject-Dhco7AlX.js";import"./VertexArrayObject-Czm05pt7.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./WGLBrushVTLSymbol-Hhd0CFGx.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-DUy4DuxJ.js";import"./mat3-B7LiNcRs.js";import"./vec2f64-Diu2Kaa8.js";import"./MapView-BeVtHZG4.js";import"./Viewpoint-kowK2Ox4.js";import"./Cyclical-L5YKfO29.js";import"./TileInfo-Dsgw3bLM.js";import"./TileKey-DZd6gJy7.js";import"./viewpointUtils-CBa44EU3.js";import"./mat2df64-CBKYtunK.js";import"./unitBezier-BX6NeAEr.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-DO2jUIHL.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-Ci4QkEXR.js";import"./labelFormatUtils-Dqk4IbyQ.js";import"./TimeOnly-DM31kLsz.js";import"./centroid-DdLmOD72.js";import"./timeSupport-DgYx0Uxy.js";import"./json-Wa8cmqdu.js";import"./ZoomMomentumEstimator-BsIgzjw7.js";import"./heatmapTextureUtils-Y8Y_7g3k.js";import"./constants-D5zmR9t2.js";import"./QueueProcessor-DHxW4yaI.js";import"./BindType-BmZEZMMh.js";import"./Util-CQaYQWOS.js";import"./TurboLine-tu1lT9-q.js";import"./basicInterfaces-wONHx_SN.js";import"./normalizeUtilsSync-B3yip2wp.js";import"./Bitmap-B9B0VE0s.js";import"./TileContainer-DO1c6A5U.js";import"./ClipRect-C_x5PYDD.js";import"./layerViewUtils-D2JqIDZ8.js";import"./AGraphicContainer-BCFkzrhS.js";import"./TechniqueInstance-C2g9Xtfa.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-CPuB3ran.js";import"./popupUtils-CSsimScH.js";const F=[0,0];let h=class extends P(T(q(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new H,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new U(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new C({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new Q({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),G(this,this.layer)){const e=this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(r,p)=>k(r,p,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,p)=>{e.graphicUpdateHandler({graphic:r,property:p})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):w()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return y((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(F,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:p=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(o){if(!l(o)&&!this.resampling)return g(this._tileInfoView.tileInfo.size);if(p<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const c=new d(n),_=await this.fetchTile(c,{...i,resamplingLevel:p+1});return f(this._tileInfoView,_,c,t)}}throw o}const s=new d(0,0,0,0);let a;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:r}),s.level!==t.level&&!this.resampling)return g(this._tileInfoView.tileInfo.size);a=await this._fetchImage(s,r)}catch(o){if(l(o))throw o;a=await this._fetchImage(t,r)}return this.resampling?f(this._tileInfoView,a,s,t):a}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};m([u()],h.prototype,"resampling",null),m([u()],h.prototype,"tilemapCache",null),h=m([V("esri.views.2d.layers.TileLayerView2D")],h);const Wi=h;export{Wi as default};
