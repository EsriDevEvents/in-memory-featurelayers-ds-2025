import{G as u,fW as c,bN as h,b_ as m,lt as b,lu as g,hM as n,lv as v,j as r,y as t,lw as f,e0 as d,P as L}from"./index-Dv-JqQDv.js";import{b as l}from"./Ground-DpNOewuO.js";import{l as y}from"./CollectionFlattener-73Uag1LF.js";import{e as T}from"./editableLayers-V9yr_aA-.js";import{n as w,l as $,t as C}from"./TablesMixin-BFT6ikAR.js";const p={"world-elevation":{id:"worldElevation",url:"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer",layerType:"ArcGISTiledElevationServiceLayer"},"world-topobathymetry":{id:"worldTopoBathymetry",url:"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer",layerType:"ArcGISTiledElevationServiceLayer"}};function I(e){let a=null;if(typeof e=="string")if(e in p){const o=p[e];a=new l({resourceInfo:{data:{layers:[o]}}})}else u.getLogger("esri.support.groundUtils").warn(`Unable to find ground definition for: ${e}. Try "world-elevation"`);else a=c(l,e);return a}let s=class extends w($(h.EventedMixin(m))){constructor(e){super(e),this.allLayers=new y({getCollections:()=>{var a,o,i;return[(a=this.basemap)==null?void 0:a.baseLayers,(o=this.ground)==null?void 0:o.layers,this.layers,(i=this.basemap)==null?void 0:i.referenceLayers]},getChildrenFunction:a=>"layers"in a?a.layers:null}),this.allTables=C(this),this.basemap=null,this.editableLayers=new y({getCollections:()=>[this.allLayers],itemFilterFunction:T}),this.ground=new l,this._basemapCache=b()}destroy(){g(this._basemapCache),this._basemapCache=null,this.allLayers.destroy(),this.allTables.destroy(),this.editableLayers.destroy(),this.basemap=n(this.basemap),n(this.ground),this._set("ground",null)}castBasemap(e){return v(e,this._basemapCache)}castGround(e){return I(e)??this._get("ground")}findLayerById(e){return this.allLayers.find(a=>a.id===e)}findTableById(e){return this.allTables.find(a=>a.id===e)}};r([t({readOnly:!0,dependsOn:[]})],s.prototype,"allLayers",void 0),r([t({readOnly:!0})],s.prototype,"allTables",void 0),r([t({type:f,json:{read:{source:"baseMap"},write:{target:"baseMap"}}})],s.prototype,"basemap",void 0),r([d("basemap")],s.prototype,"castBasemap",null),r([t({readOnly:!0})],s.prototype,"editableLayers",void 0),r([t({type:l,nonNullable:!0})],s.prototype,"ground",void 0),r([d("ground")],s.prototype,"castGround",null),r([t()],s.prototype,"undoRedo",void 0),s=r([L("esri.Map")],s);const M=s;export{M as L};
