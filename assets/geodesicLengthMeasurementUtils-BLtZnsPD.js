import{fB as x,ad as i,fC as S,aN as g,nq as d,at as R,av as y,a0 as w}from"./index-Dv-JqQDv.js";import{e as z,v as C}from"./vec2-DGogPjh1.js";import{e as T}from"./projectVectorToVector-BbXjU1Ty.js";import{x as q}from"./elevationInfoUtils-Cey9W7Lb.js";import{a as c}from"./quantityUtils-CvTt11a2.js";import{geodesicLength as v}from"./geometryEngine-C5uHQPwZ.js";import{w as j,j as Z,v as A,z as B}from"./geodesicUtils-C4H45CeC.js";function Q(e,r,n,t){n.projectToRenderScreen(e,l),n.projectToRenderScreen(r,$),z(t,$,l),C(t,t)}function G(e,r,n,t,m=i()){const u=g(p,e);return u[2]=q(t,u,r,n)||0,t.renderCoordsHelper.toRenderCoords(u,r,m),m}function U(e,r,n,t){return t.type==="2d"?(a.x=e[0],a.y=e[1],a.spatialReference=r,t.toScreen(a)):(G(e,r,n,t,p),t.state.camera.projectToScreen(p,f),x(f[0],f[1]))}const a=T(0,0,0,null),p=i(),l=d(),$=d(),f=S();function V(e){return R(e)&&j(e)||y(e)}function h(e,r,n,...t){return R(e)&&j(e)?r.apply(void 0,t):y(e)?n.apply(void 0,t):null}const W=1e5;function X(e){const{spatialReference:r}=e;return h(r,b,k,e)}function Y(e,r){if(!w(e.spatialReference,r.spatialReference))return null;const{spatialReference:n}=e;return o[0]=e.x,o[1]=e.y,o[2]=e.hasZ?e.z:0,s[0]=r.x,s[1]=r.y,s[2]=r.hasZ?r.z:0,H(o,s,n)}function H(e,r,n){return h(n,L,N,e,r,n)}function L(e,r,n){return c(Z(E,e,r,n).distance,"meters")}function N(e,r,n){return c(v(D(e,r,n),"meters"),"meters")}function b(e){return c(A([e],"meters")[0],"meters")}function k(e){return c(v(e,"meters"),"meters")}function D(e,r,n){return{type:"polyline",spatialReference:n,paths:[[[...e],[...r]]]}}const E=new B,o=i(),s=i();export{Q as a,U as d,Y as f,W as i,G as l,X as m,h as p,V as r,H as u};
