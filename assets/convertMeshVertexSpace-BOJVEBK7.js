import{X as p,s,ab as i}from"./index-Dv-JqQDv.js";import{l as n}from"./MeshVertexAttributes-CERcIROX.js";import{M as c}from"./vertexSpaceConversion-lekgA4Rd.js";import"./mat3-B7LiNcRs.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./spatialReferenceEllipsoidUtils-MFgRhPLs.js";import"./computeTranslationToOriginAndRotation-DBznw1xD.js";import"./projectPointToVector-ARkh6gdu.js";import"./meshVertexSpaceUtils-1Rv9Wig9.js";import"./MeshLocalVertexSpace-Bf4xmfpu.js";import"./vec3-zd-aCjeY.js";import"./projection-CsHR6jE_.js";import"./DoubleArray-DzYWDmvK.js";import"./BufferView-_0HdWB6j.js";import"./vec2-DGogPjh1.js";import"./vec4-mLjVaC0N.js";async function P(t,r,m){await Promise.resolve(),p(m);const o=c(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new n({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{P as convertMeshVertexSpace};
