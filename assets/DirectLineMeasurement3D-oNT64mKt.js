import{j as e,y as s,Q as x,lW as V,P as L,b_ as et,o as M,hM as A,db as z,ig as st,oa as nt,ob as at,oc as ot,gH as $,ad as C,ev as N,g9 as rt}from"./index-Dv-JqQDv.js";import{e as E,B as lt,n as I}from"./jsxFactory-C3RLkrq9.js";import{c as ut}from"./Analysis-B5cU-qRz.js";import{e as pt}from"./defaultUnit-DR4mV0yv.js";import{t as dt}from"./memoize-DsJmrG76.js";import{h as ht}from"./UpdatingHandles-C0Kh7aEt.js";import{x as ct}from"./hydratedFeatures-D9SfIMrp.js";import{M as mt}from"./measurementUtils-Y2csc6NI.js";import{R as gt}from"./SnappingVisualizer3D-Cz0TFK1Y.js";import{F as vt,z as yt,q as wt}from"./dragEventPipeline3D-BLMXasJE.js";import{h as _t}from"./lineSegment-C_r0Slta.js";import{e as Pt}from"./interfaces-js1RL7O8.js";import{e as R}from"./interfaces-CjSZqm0S.js";import{e as k,f as bt,a as ft}from"./RenderObject-DDR5Ef_H.js";import{c as Mt}from"./Laserlines.glsl-Dxbyjke2.js";import{s as Dt}from"./RenderGeometry-D3-u-2b6.js";import{b as Lt}from"./ElevationProvider-DZcTQ1wD.js";import{o as St}from"./ShadedColorMaterial.glsl-xZWGq-4Z.js";import{E as Vt,p as Ot,P as $t}from"./EditGeometryOperations-B2SzBwZq.js";import{p as Ct,h as Ht}from"./InteractiveToolBase-ClRFM-nV.js";import{e as Ut}from"./SnappingContext-lR2hMWGP.js";import{f as xt}from"./SnappingDragPipelineStep-B5YcZAo8.js";import{a as At}from"./SnappingManagerPool-Bm5IY62Y.js";import{N as Tt}from"./SnappingManager-BxBCA2Ex.js";import{n as B}from"./screenUtils-DKZWDFXK.js";import{u as Gt}from"./InteractiveAnalysisViewModel-CCqyCUTR.js";import{e as F}from"./globalCss-CZa70j6i.js";import{u as zt}from"./MeasurementWidgetContent-BpWV4MlP.js";import"./getDefaultUnitForView-CsWpEOAw.js";import"./projectVectorToVector-BbXjU1Ty.js";import"./projectPointToVector-ARkh6gdu.js";import"./sphere-j1PWtIhy.js";import"./plane-4BN6ZBDV.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-urfecwwD.js";import"./geodesicAreaMeasurementUtils-CmEBSq_6.js";import"./quantityUtils-CvTt11a2.js";import"./geometryEngine-C5uHQPwZ.js";import"./geometryEngineBase-RmbNeFm7.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-iwj77qVb.js";import"./geodesicUtils-C4H45CeC.js";import"./geodesicLengthMeasurementUtils-BLtZnsPD.js";import"./vec2-DGogPjh1.js";import"./elevationInfoUtils-Cey9W7Lb.js";import"./ExtendedLineVisualElement-B0T34MD8.js";import"./vec4f32-CjrfB-0a.js";import"./frustum-W7EQ25hI.js";import"./EngineVisualElement-DfSprzSD.js";import"./VisualElement-C7QPSfUA.js";import"./debugFlags-CfrzpJ7g.js";import"./interfaces-B8ge7Jg9.js";import"./basicInterfaces-wONHx_SN.js";import"./VertexAttribute-BnAa5VW0.js";import"./ViewingMode-Dodu7ZZk.js";import"./PointVisualElement-FxfC2DLT.js";import"./Object3DVisualElement-DmJ-xKcL.js";import"./ColorMaterial.glsl-D5JrE5f2.js";import"./mat3-B7LiNcRs.js";import"./BufferView-_0HdWB6j.js";import"./DefaultTechniqueConfiguration-C28-5KBi.js";import"./Indices-BTetzIKW.js";import"./Util-CQaYQWOS.js";import"./triangle-0a93pGd5.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-CO_Ks2k6.js";import"./enums-BlUEVwJR.js";import"./Texture-BsiXXqc8.js";import"./renderState-yUi34s5A.js";import"./Matrix4PassUniform-B-NXMru_.js";import"./BindType-BmZEZMMh.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./InterleavedLayout-B5L5JJLV.js";import"./types-D0PSWh4d.js";import"./OutputHighlight.glsl-Bs_35Qno.js";import"./floatRGBA-BTfDfCN4.js";import"./RightAngleQuadVisualElement-2kSwmXLY.js";import"./orientedBoundingBox-BiAE_4Zn.js";import"./quat-B52zwwOM.js";import"./spatialReferenceEllipsoidUtils-MFgRhPLs.js";import"./computeTranslationToOriginAndRotation-DBznw1xD.js";import"./SnappingVisualizer-be9i9okW.js";import"./PointSnappingHint-EBEIOVE5.js";import"./ray-DhyD5gIv.js";import"./verticalOffsetUtils-DVynISE7.js";import"./interfaces-D6pIddIh.js";import"./DoubleArray-DzYWDmvK.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BufferObject-Dhco7AlX.js";import"./vec3f32-Cw9Q6TO_.js";import"./axisAngleDegrees-CRhw0Lf9.js";import"./weather-K8rA5AE9.js";import"./Scheduler-KZBBWfDI.js";import"./signal-0tlktF45.js";import"./debugFlags-CVnXAL57.js";import"./Float4DrawUniform-DDO6IFxX.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-BaSixQu1.js";import"./Intersector-BLO31d1u.js";import"./VertexArrayObject-Czm05pt7.js";import"./boundedPlane-DBcMJiAN.js";import"./geometry2dUtils-BOZAHPKg.js";import"./meshVertexSpaceUtils-1Rv9Wig9.js";import"./MeshLocalVertexSpace-Bf4xmfpu.js";import"./dehydratedFeatureComparison-JrNDQOYF.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./InputManager-BwD1PEf3.js";import"./keybindings-DX6sI0di.js";import"./utils-CXgSw6Sd.js";import"./layerViewUtils-D2JqIDZ8.js";import"./Cyclical-L5YKfO29.js";import"./UnitSelect-C-nWBhb5.js";let f=class extends ut{constructor(t){super(t),this.type="direct-line-measurement",this.startPoint=null,this.endPoint=null,this.unit=null}get requiredPropertiesForEditing(){return[this.startPoint,this.endPoint]}clear(){this.startPoint=null,this.endPoint=null}};e([s({type:["direct-line-measurement"]})],f.prototype,"type",void 0),e([s({type:x})],f.prototype,"startPoint",void 0),e([s({type:x})],f.prototype,"endPoint",void 0),e([s({type:V,value:null})],f.prototype,"unit",void 0),e([s({readOnly:!0})],f.prototype,"requiredPropertiesForEditing",null),f=e([L("esri.analysis.DirectLineMeasurementAnalysis")],f);const j=f;var D;(function(t){t.Manipulators="manipulators",t.AnalysisViewDestroyed="analysis-view-destroyed",t.AnalysisView="analysis-view"})(D||(D={}));let p=class extends et{constructor(t){super(t),this.cursorPoint=null,this._visible=!1,this._laserLine=null,this.laserLineEnabled=!0,this._lastDraggedHandle=null}initialize(){this._laserLine=new Mt({view:this.view,attached:!0,isDecoration:!0}),this._updateVisibility(this._visible),this._connectToAnalysisView(),this.addHandles(M(()=>this._params,({laserLineGlowColor:t,laserLineInnerColor:i,laserLineGlobalAlpha:a})=>{const n=this._laserLine,l=n.style;n.style={...l,innerColor:i,glowColor:t,globalAlpha:a}}))}destroy(){this._laserLine=A(this._laserLine)}get _params(){const{accentColor:t}=this.view.effectiveTheme;return{laserLineGlowColor:z.toUnitRGB(t),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:z.toUnitRGB(st(t)),laserLineInnerWidth:.75,laserLineGlobalAlpha:.75*t.a,handleColor:nt(t,.5),handleRadius:5}}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){}get _cursorPosition(){const t=C(),i=this.cursorPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _startPosition(){const t=C(),i=this.analysis.startPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _endPosition(){const t=C(),i=this.analysis.endPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _laserLineParams(){const t=this._focusPosition,{active:i,lineState:a}=this.toolState,n=this.analysisViewData,l=this.laserLineEnabled&&!!t&&a!=="measured"&&i;if(!l||!this.visible||n==null||n.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};const r=n.actualVisualizedMeasurement,o=this.view.viewingMode!=="local"&&l&&!!this.analysis.startPoint&&r==="geodesic",d=l&&n.viewMode===R.Triangle;return{heightManifoldTarget:r==="euclidean"?t:null,pointDistanceLine:o?this._pointDistanceLine:null,lineVerticalPlaneSegment:d?_t(this._startPosition,this._endPosition):null}}get _focusPosition(){const{lineState:t}=this.toolState,i=this.analysisViewData,a=i!=null&&!i.destroyed&&i.measurementMode===Pt.Euclidean&&i.viewMode===R.Direct;switch(t){case"drawing":return a?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case"editing":return a?this._lastDraggedHandle==="start"?this._endPosition:this._startPosition:this._lastDraggedHandle==="start"?this._startPosition:this._endPosition;default:return this.cursorPoint!=null?this._cursorPosition:null}}get _pointDistanceLine(){return{origin:this.toolState.lineState==="drawing"||this._lastDraggedHandle==="end"?this._startPosition:this._endPosition,target:this._focusPosition}}createManipulators(){const t=this._params,{view:i}=this,a=()=>{const u=bt(t.handleColor),b=[new ft(Dt(u,1,32,32))],_=new k({view:i,renderObjects:b});return _.available=!1,_.radius=t.handleRadius,[_,u]},[n,l]=a(),[r,o]=a(),d=new k({view:this.view,available:!1,interactive:!1});this.analysis.startPoint!=null&&(n.location=this.analysis.startPoint,n.available=!0),this.analysis.endPoint!=null&&(r.location=this.analysis.endPoint,r.available=!0);const m=()=>{let u=this._lastDraggedHandle;n.grabbing&&!r.grabbing&&(u="start"),r.grabbing&&!n.grabbing&&(u="end"),n.grabbing||r.grabbing||(u=null),this._lastDraggedHandle=u},P=n.events.on("grab-changed",m),w=r.events.on("grab-changed",m);return this.addHandles([P,w,M(()=>ot(this._params.handleColor),u=>{l.setParameters({color:u}),o.setParameters({color:u})},{equals:at})],D.Manipulators),{start:n,end:r,cursor:d}}show(){this.destroyed||this._visible||this._updateVisibility(!0)}hide(){!this.destroyed&&this._visible&&this._updateVisibility(!1)}_connectToAnalysisView(){this.removeHandles(D.AnalysisView),this.addHandles([M(()=>{var t;return(t=this.analysisViewData)==null?void 0:t.destroyed},t=>{t&&this.removeHandles(D.AnalysisView)},$),M(()=>[this.toolState.lineState==="measured",this.analysisViewData],([t,i])=>{i==null||i.destroyed||(i.allowVisualElementsOrientationChange=!t)},$),M(()=>this._laserLineParams,t=>{const i=this._laserLine;i.heightManifoldTarget=t.heightManifoldTarget,i.pointDistanceLine=t.pointDistanceLine,i.lineVerticalPlaneSegment=t.lineVerticalPlaneSegment},$)],D.AnalysisView)}_updateVisibility(t){this.initialized&&(this._visible=t,t?this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha}:this.view.cursor=null,this._laserLine.visible=t)}};e([s({constructOnly:!0})],p.prototype,"view",void 0),e([s()],p.prototype,"_params",null),e([s({constructOnly:!0})],p.prototype,"analysis",void 0),e([s({constructOnly:!0})],p.prototype,"analysisViewData",void 0),e([s()],p.prototype,"cursorPoint",void 0),e([s()],p.prototype,"toolState",void 0),e([s()],p.prototype,"visible",null),e([s()],p.prototype,"testData",null),e([s()],p.prototype,"_visible",void 0),e([s()],p.prototype,"_laserLine",void 0),e([s({constructOnly:!0})],p.prototype,"laserLineEnabled",void 0),e([s()],p.prototype,"_cursorPosition",null),e([s()],p.prototype,"_startPosition",null),e([s()],p.prototype,"_endPosition",null),e([s()],p.prototype,"_lastDraggedHandle",void 0),e([s()],p.prototype,"_laserLineParams",null),e([s()],p.prototype,"_focusPosition",null),e([s()],p.prototype,"_pointDistanceLine",null),p=e([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],p);let h=class extends St{constructor(t){super(t),this._updatingHandles=new ht,this._emulatedDrag=null,this.lineState="initial",this.startPointSurfaceLocation=null,this.endPointSurfaceLocation=null,this.cursorPointSurfaceLocation=null,this.startManipulator=null,this.endManipulator=null,this.cursorManipulator=null,this._getSnappingContext=dt(i=>new Ut({elevationInfo:{mode:"absolute-height",offset:0},pointer:i,editGeometryOperations:new Vt(new Ot("point",$t(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new gt}))}initialize(){const{view:t,analysis:i,analysisViewData:a,visible:n}=this;this.measurementView=new p({toolState:this,view:t,analysis:i,analysisViewData:a,visible:n});const l=At(t);this._snappingManagerResult=l,this.addHandles(l);const{start:r,end:o,cursor:d}=this.measurementView.createManipulators(),m=(w,u,b)=>Ct(w,(_,J,S,T)=>{const G=wt(_),K=this._snappingManager,X=this._getSnappingContext(T),Y=this._updatingHandles,{lineState:Z}=this;S=S.next(G).next(Ht(this,[b,u])).next(g=>{if(u!=="cursorPoint"){const v=this.analysis[u];v!=null&&(_.location=v)}return g});const tt=yt(this.view),it=g=>{const v=tt(g);return v||this.lineState!=="drawing"&&this.lineState!=="initial"||(this[u]=null,this[b]=null),v};let O=J.next(G).next(it);if(T!=="touch"||Z==="editing"){const{snappingStep:g,cancelSnapping:v}=xt({snappingManager:K,snappingContext:X,updatingHandles:Y});S=S.next(v),O=O.next(...g)}O.next(g=>g.action!=="start"?g:null).next(g=>{const v=ct(g.mapEnd,new x);this[u]=v,_.location=v,this[b]=this._surfaceLocation(v,g.surfaceType)})}),P=w=>w.events.on("grab-changed",()=>{const u=r.grabbing||o.grabbing;this.lineState=u?"editing":"measured"});this.addHandles([m(r,"startPoint","startPointSurfaceLocation"),m(o,"endPoint","endPointSurfaceLocation"),m(d,"cursorPoint","cursorPointSurfaceLocation"),P(r),P(o)]),this.manipulators.add(r),this.manipulators.add(o),this.manipulators.add(d),this.startManipulator=r,this.endManipulator=o,this.cursorManipulator=d,this.addHandles(M(()=>this.state,w=>{w==="measured"&&this.finishToolCreation()},N)),Tt(this)}destroy(){this._updatingHandles=A(this._updatingHandles),this.measurementView=A(this.measurementView)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){const{analysis:t}=this;if(t.startPoint==null&&t.endPoint==null)return"ready";const{lineState:i}=this;return this.validMeasurement&&i!=="editing"&&i!=="drawing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.lineState==="drawing"?"crosshair":null}get startPoint(){return this.analysis.startPoint}set startPoint(t){this.analysis.startPoint=t}get endPoint(){return this.analysis.endPoint}set endPoint(t){this.analysis.endPoint=t}get cursorPoint(){return this.measurementView.cursorPoint}set cursorPoint(t){this.measurementView.cursorPoint=t}get snappingOptions(){return this._snappingManager.options}get validMeasurement(){return this.analysis.startPoint!=null&&this.analysis.endPoint!=null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onShow(){this.measurementView.show(),this._updateManipulatorAvailability()}onHide(){this.measurementView.hide()}onDeactivate(){var t;(t=this._emulatedDrag)==null||t.cancel(),this._emulatedDrag=null}onInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t)}this._updateManipulatorAvailability()}_handlePointerMove(t){var d,m;if(!this.active||this.view.navigating)return;const{pointerType:i}=t;if(i!=="mouse")return;const a=B(t),{lineState:n,cursorManipulator:l,endManipulator:r}=this;let o=!1;this.cursorPoint==null&&((d=this._emulatedDrag)==null||d.cancel(),this._emulatedDrag=H(l,i,a),o=!0),n==="initial"&&((m=this._emulatedDrag)==null||m.update(a),o=!0),n==="drawing"&&(r.events.emit("drag",{action:"update",start:a,screenPoint:a}),o=!0),o&&t.stopPropagation()}_handleImmediateClick(t){var m,P,w,u,b;if(!this.active||!mt(t))return;const i=B(t),{pointerType:a}=t,{cursorManipulator:n,startManipulator:l,endManipulator:r,lineState:o}=this;let d=!1;switch(this.cursorPoint==null&&((m=this._emulatedDrag)==null||m.cancel(),this._emulatedDrag=H(n,a,i)),o){case"initial":if((P=this._emulatedDrag)==null||P.update(i),this.cursorPoint!=null){(w=this._emulatedDrag)==null||w.end(i),this._emulatedDrag=null;const{cursorPoint:_}=this;this.startPoint=_,this.startPointSurfaceLocation=this.cursorPointSurfaceLocation,l.location=_,l.interactive=!1,r.interactive=!1,this.lineState="drawing",this._emulatedDrag=H(r,a,i),d=!0}break;case"drawing":(u=this._emulatedDrag)==null||u.update(i),this.endPoint!=null&&((b=this._emulatedDrag)==null||b.end(i),this._emulatedDrag=null,l.interactive=!0,r.interactive=!0,this.lineState="measured",d=!0)}d&&t.stopPropagation()}_surfaceLocation(t,i){return i===vt.GROUND?"on-the-surface":(t.z??0)>=this._getElevation(t)?"above-the-surface":"below-the-surface"}_updateManipulatorAvailability(){this.startManipulator.available=this.analysis.startPoint!=null,this.endManipulator.available=this.analysis.endPoint!=null}_getElevation(t){return this.view.basemapTerrain.ready?Lt(this.view.elevationProvider,t)??0:0}get test(){}};function H(t,i,a){return t.events.emit("drag",{action:"start",pointerType:i,start:a,screenPoint:a}),{update:n=>t.events.emit("drag",{action:"update",start:n,screenPoint:n}),end:n=>t.events.emit("drag",{action:"end",start:n,screenPoint:n}),cancel:()=>t.events.emit("drag",{action:"cancel"})}}e([s({readOnly:!0})],h.prototype,"state",null),e([s()],h.prototype,"lineState",void 0),e([s({readOnly:!0})],h.prototype,"cursor",null),e([s()],h.prototype,"startPoint",null),e([s()],h.prototype,"endPoint",null),e([s()],h.prototype,"cursorPoint",null),e([s({constructOnly:!0})],h.prototype,"analysis",void 0),e([s({constructOnly:!0})],h.prototype,"analysisViewData",void 0),e([s()],h.prototype,"measurementView",void 0),e([s({constructOnly:!0})],h.prototype,"view",void 0),e([s({readOnly:!0})],h.prototype,"validMeasurement",null),e([s({value:null})],h.prototype,"startPointSurfaceLocation",void 0),e([s({value:null})],h.prototype,"endPointSurfaceLocation",void 0),e([s({value:null})],h.prototype,"cursorPointSurfaceLocation",void 0),e([s()],h.prototype,"updating",null),h=e([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],h);const Et=h;let y=class extends Gt{constructor(i){super(i),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="DirectLineMeasurement3DViewModel is only supported in 3D views.",this._userUnit=null,this._userUnitOptions=null}initialize(){this.addHandles(M(()=>({analysis:this.analysis,unit:this.unit}),({analysis:i,unit:a})=>{i!=null&&(i.unit=a)},N))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){var o;const{tool:i}=this;if(i==null)return null;const a=()=>({text:null,state:"unavailable"}),n=d=>({text:d,state:"available"}),{analysisViewData:l}=i,r=l.result!=null;return{mode:((o=l.result)==null?void 0:o.mode)??"euclidean",directDistance:r&&l.actualVisualizedMeasurement==="euclidean"?n(l.directLabelText):a(),horizontalDistance:r?n(l.horizontalLabelText):a(),verticalDistance:r?n(l.verticalLabelText):a()}}set unitOptions(i){this._userUnitOptions=i,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(i){this._userUnit=i?this._findSelectableUnit(i,this._userUnit):null}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new j}constructTool(){return new Et({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(i,a){const n=this.unitOptions;return n.includes(i)?i:a?this._findSelectableUnit(a):n[0]}_filteredOrAllUnits(i){if(!i)return V.slice();const a=i.filter(n=>V.includes(n));return a.length===0?V.slice():a}};e([s({type:j})],y.prototype,"analysis",void 0),e([s({readOnly:!0})],y.prototype,"state",null),e([s({readOnly:!0})],y.prototype,"measurement",null),e([s()],y.prototype,"unitOptions",null),e([s()],y.prototype,"unit",null),e([s(pt)],y.prototype,"defaultUnit",void 0),e([s()],y.prototype,"_userUnit",void 0),e([s()],y.prototype,"_userUnitOptions",void 0),y=e([L("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],y);const Q=y,W="esri-direct-line-measurement-3d",q={base:W,newMeasurementButton:`${W}__clear-button`};let c=class extends lt{constructor(t,i){super(t,i),this.messages=null,this.messagesCommon=null,this.viewModel=new Q}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get icon(){return"measure-line"}set icon(t){this._overrideIfSome("icon",t)}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesCommon:i,unit:a,unitOptions:n,viewModel:l}=this,{active:r,measurement:o,state:d,supported:m}=l;return I("div",{"aria-label":this.messages.widgetLabel,class:this.classes(q.base,F.widget,F.panel),key:this,role:"presentation"},this.visible?I(zt,{active:r,measurementItems:[{key:"direct",title:t.direct,value:U(o==null?void 0:o.directDistance)},{key:"horizontal",title:t.horizontal,value:U(o==null?void 0:o.horizontalDistance)},{key:"vertical",title:t.vertical,value:U(o==null?void 0:o.verticalDistance)}],messages:{...t,notApplicable:i==null?void 0:i.notApplicable},newMeasurementButtonClass:q.newMeasurementButton,state:d,supported:m,unit:a,unitOptions:n,onNewMeasurementClick:()=>{rt(this.viewModel.start())},onUnitChange:P=>{this.unit=P}}):null)}};function U(t){return(t==null?void 0:t.state)==="available"?t.text:null}e([s()],c.prototype,"view",null),e([s()],c.prototype,"visible",null),e([s()],c.prototype,"active",null),e([s({constructOnly:!0,nonNullable:!0})],c.prototype,"analysis",null),e([s()],c.prototype,"icon",null),e([s()],c.prototype,"label",null),e([s(),E("esri/widgets/DirectLineMeasurement3D/t9n/DirectLineMeasurement3D")],c.prototype,"messages",void 0),e([s(),E("esri/t9n/common")],c.prototype,"messagesCommon",void 0),e([s()],c.prototype,"uiStrings",void 0),e([s({type:Q})],c.prototype,"viewModel",void 0),e([s()],c.prototype,"unitOptions",null),e([s()],c.prototype,"unit",null),c=e([L("esri.widgets.DirectLineMeasurement3D")],c);const Qe=c;export{Qe as default};
