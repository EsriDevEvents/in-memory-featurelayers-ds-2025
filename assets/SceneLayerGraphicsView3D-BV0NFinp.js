const __vite__fileDeps=["./I3STreeDebugger-FGy0zkYd.js","./index-Dv-JqQDv.js","./index-CejX7rzk.css","./mat4f64-Dk4dwAN8.js","./TileTreeDebugger-DjOJOvci.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{bN as j,mZ as V,hM as y,gH as N,o as H,_ as Q,kj as q,G as w,ci as F,nJ as T,cn as U,dx as z,nK as k,nL as B,a6 as S,d3 as Z,kp as K,M as A,j as c,y as m,hO as W,P as Y,ad as J}from"./index-Dv-JqQDv.js";import{n as X,e as ee}from"./projectVectorToVector-BbXjU1Ty.js";import{t as G,e as te}from"./DoubleArray-DzYWDmvK.js";import{o as re}from"./LayerConstants-B33OP6sh.js";import{Z as ie}from"./dehydratedFeatures-OxpG9XrG.js";import{c as se}from"./hydratedFeatures-D9SfIMrp.js";import{G as P,K as oe}from"./I3SOverrides-DH9VWmWl.js";import{h as ae}from"./WorkerHandle-DGrN1tjM.js";import{l as ne}from"./LayerView3D-CIKXmWRc.js";import{P as de,l as le}from"./HeatmapDensity.glsl-BXLwH3Zb.js";import{w as pe,a as he,i as ue,u as ce,f as me,b as ge}from"./SceneLayerView-D_bRjine.js";import{Y as _e,t as fe,N as ye,A as be,Q as $}from"./I3SUtil-D61YPx_K.js";import{u as ve,t as Ie}from"./TemporalSceneLayerView-bYhDCINe.js";import{t as xe}from"./WaterSurface.glsl-BZtDPgAH.js";import{i as Ee}from"./PopupSceneLayerView-CuDlJHu7.js";import{t as C}from"./debugFlags-CfrzpJ7g.js";import{J as we,s as Ne}from"./orientedBoundingBox-BiAE_4Zn.js";import{t as Ce}from"./Viewshed.glsl-Dgwz8otk.js";import{C as Oe}from"./RenderGeometry-D3-u-2b6.js";import{u as De}from"./popupUtils-CSsimScH.js";import{I as Fe}from"./Scheduler-KZBBWfDI.js";import"./projectPointToVector-ARkh6gdu.js";import"./ViewingMode-Dodu7ZZk.js";import"./mat3-B7LiNcRs.js";import"./mat3f64-BBpwCtoL.js";import"./RenderTexture-B_EQhGnV.js";import"./meshVertexSpaceUtils-1Rv9Wig9.js";import"./MeshLocalVertexSpace-Bf4xmfpu.js";import"./sphere-j1PWtIhy.js";import"./plane-4BN6ZBDV.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-urfecwwD.js";import"./resourceUtils-Bb92V0U7.js";import"./basicInterfaces-wONHx_SN.js";import"./DefaultTechniqueConfiguration-C28-5KBi.js";import"./Indices-BTetzIKW.js";import"./Util-CQaYQWOS.js";import"./triangle-0a93pGd5.js";import"./lineSegment-C_r0Slta.js";import"./VertexAttribute-BnAa5VW0.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-CO_Ks2k6.js";import"./enums-BlUEVwJR.js";import"./Texture-BsiXXqc8.js";import"./renderState-yUi34s5A.js";import"./Matrix4PassUniform-B-NXMru_.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./vec2-DGogPjh1.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./RealisticTree.glsl-Cu8STgaR.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./BufferView-_0HdWB6j.js";import"./vec3-zd-aCjeY.js";import"./vec4-mLjVaC0N.js";import"./DefaultMaterial_COLOR_GAMMA-32Y4lnr4.js";import"./quat-B52zwwOM.js";import"./vec2f32-BbH2jxlN.js";import"./NestedMap-DgiGbX8E.js";import"./InterleavedLayout-B5L5JJLV.js";import"./types-D0PSWh4d.js";import"./OutputHighlight.glsl-Bs_35Qno.js";import"./verticalOffsetUtils-DVynISE7.js";import"./DecodeSymbolColor.glsl-C6Fgb1JQ.js";import"./I3SNode-Cv9xfXKG.js";import"./ElevationRange-BrgM1moX.js";import"./I3SBinaryReader-DZaX-yfP.js";import"./spatialReferenceEllipsoidUtils-MFgRhPLs.js";import"./frustum-W7EQ25hI.js";import"./ReactiveSet-DhWxTTYq.js";import"./meshFeatureSet-BAO-Vp8I.js";import"./Mesh-CgH6w2J9.js";import"./axisAngleDegrees-CRhw0Lf9.js";import"./MeshComponent-CKdOnzQW.js";import"./imageUtils-CyYQ2a5H.js";import"./MeshVertexAttributes-CERcIROX.js";import"./MeshTransform-BahjckjL.js";import"./triangulationUtils-BhDjnI5P.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./deduplicate-DQWVMiBh.js";import"./projection-CsHR6jE_.js";import"./computeTranslationToOriginAndRotation-DBznw1xD.js";import"./vertexSpaceConversion-lekgA4Rd.js";import"./External-DIu21-ag.js";import"./FeatureLayerView3D-DPnr5z3s.js";import"./FeatureLayerViewBase3D-CiEiZa0a.js";import"./EventedSet-AoomztOi.js";import"./signal-0tlktF45.js";import"./FeatureLayerView-QzxjxJhQ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./LayerView-6INZgiuX.js";import"./UpdatingHandles-C0Kh7aEt.js";import"./layerViewUtils-D2JqIDZ8.js";import"./RefreshableLayerView-BkpnzSC-.js";import"./timeSupport-CVYAdt33.js";import"./timeUtils-DFs82Cpv.js";import"./utils-CXgSw6Sd.js";import"./tagSymbols-BPcGfZon.js";import"./projectExtentUtils-qZ3Epvl6.js";import"./geometryServiceUtils-Bg30a3zi.js";import"./project-DnDtHu17.js";import"./vec3f32-Cw9Q6TO_.js";import"./ElevationProvider-DZcTQ1wD.js";import"./boundedPlane-DBcMJiAN.js";import"./weather-K8rA5AE9.js";import"./debugFlags-CVnXAL57.js";import"./Float4DrawUniform-DDO6IFxX.js";import"./Octree-BaSixQu1.js";import"./floatRGBA-BTfDfCN4.js";import"./Intersector-BLO31d1u.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-Czm05pt7.js";import"./BufferObject-Dhco7AlX.js";import"./ReactiveMap-DxvIcNmk.js";import"./dehydratedFeatureComparison-JrNDQOYF.js";import"./Viewpoint-kowK2Ox4.js";import"./Cyclical-L5YKfO29.js";import"./jsxFactory-C3RLkrq9.js";import"./GraphicsCollection-DlcRCtU0.js";import"./ColorMaterial.glsl-D5JrE5f2.js";import"./edgeUtils-BJ2b_x7k.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Normals-bmFJkGdK.js";import"./CIMSymbolHelper-DBCkPMeB.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CnE29zYd.js";import"./GeometryUtils-CGcKgdcH.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./mat2d-C6u6dH6d.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./lineStippleUtils-BesjtKyl.js";import"./projectVectorToPoint-D_lHmELE.js";import"./DefaultLayouts-CvcU3NmP.js";import"./webStyleSymbolUtils-DSxq9N1_.js";import"./Intersector-TO0eVp6c.js";import"./RenderCoordsHelper-DKS3Y6VB.js";import"./DefaultUI-BWAdHYa0.js";import"./InputManager-BwD1PEf3.js";import"./Map-DV4_DU8O.js";import"./Ground-DpNOewuO.js";import"./CollectionFlattener-73Uag1LF.js";import"./editableLayers-V9yr_aA-.js";import"./catalogUtils-CiWgGrdS.js";import"./TablesMixin-BFT6ikAR.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-DKZWDFXK.js";import"./a11yUtils-DW8v-NB5.js";import"./heightModelInfoUtils-DQiO1_HQ.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CEs_6QlQ.js";import"./Compass-DBSyeZOs.js";import"./utils-DsJqvptN.js";import"./GoTo-BCG1WN4R.js";import"./NavigationToggle-CRz1xlJz.js";import"./Zoom-C6srvgaZ.js";import"./viewpointUtils-Bk1t9hXb.js";import"./earthUtils-D6ZAndqJ.js";import"./spatialReferenceSupport-hDa_4tCr.js";import"./ElevationSamplerData-CTsi29Ag.js";import"./terrainUtils-BNct5mku.js";import"./TileInfo-Dsgw3bLM.js";import"./TileKey-DZd6gJy7.js";import"./Environment-Jr1y7jce.js";import"./quantityUtils-CvTt11a2.js";import"./Program-By3cM00b.js";import"./ShadowCastVisualizeTechniqueConfiguration-MkEH-Ojf.js";import"./euclideanLengthMeasurementUtils-DU6F1DKF.js";import"./ray-DhyD5gIv.js";import"./ZoomMomentumEstimator-BsIgzjw7.js";import"./labelFormatUtils-Dqk4IbyQ.js";import"./FeatureTileDescriptor3D-7bhVDC-s.js";import"./elevationInfoUtils-Cey9W7Lb.js";import"./ElevationQueryTileCache-BJ_8u3U9.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./RenderableTile-D8pMnDSe.js";import"./enums-BRzLM11V.js";import"./TileStrategy-Bm9AEGL5.js";import"./TileKey-DixmkgbB.js";import"./QueueProcessor-DHxW4yaI.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-BaFfZuup.js";import"./DisplayObject-NwP1D55U.js";import"./StyleDefinition-BK3ROBTO.js";import"./resources-DCd8hSXv.js";import"./edgeProcessing-AsuFhimy.js";import"./testSVGPremultipliedAlpha-D_Za_c1C.js";import"./RenderingContext-4XQ9xHRL.js";import"./ProgramCache-DtSlkqy0.js";import"./queryForSymbologySnapping-C2apfyTa.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-Car90PVM.js";import"./rendererConversion-Bt-Ek7t_.js";import"./optimizedFeatureQueryEngineAdapter-wwbEsU1w.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-C2urojqP.js";import"./quickselect-D0_cvEX6.js";import"./QueryEngine-DYFX0Grk.js";import"./WhereClause-B3tk4NQp.js";import"./TimeOnly-DM31kLsz.js";import"./timeSupport-DgYx0Uxy.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./FeatureStore-B1gQldsG.js";import"./BoundsStore-CcA6vL2e.js";import"./heatmapTextureUtils-Y8Y_7g3k.js";class M extends ae{constructor(t){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:i=>[i.geometryBuffer]},t,{hasInitialize:!0})}}class Se extends j{constructor(t,i){super(),this._updateAndCompare=t,this._notifyUpdated=i,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const t=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:t})}this._nodes.clear()}get length(){return this._graphics.size}get(t){return this._graphics.get(t)}getNode(t){return this._nodes.get(t)}hasNode(t){return this._nodes.has(t)}nodes(){return this._nodes.values()}addNode(t,i){this._nodes.set(t,i);const r=i.graphics;if(r.length===0)return;const s=new Set;for(let a=0;a<r.length;a++){const n=r[a],d=n.objectId,h=this._graphics.get(d);if(h){s.add(d),n!==h&&(r[a]=h);const p=this._duplicates.get(d);p?p.push(t):this._duplicates.set(d,[h.nodeIndex,t])}else n.nodeIndex=t,this._graphics.set(d,n)}s.size&&this._updateForeignGraphics(i);const o=s.size>0?r.filter(a=>!s.has(a.objectId)):r;o.length>0&&this.emit("change",{added:o,removed:[]})}removeNode(t){const i=this._nodes.get(t);if(!i)return;this._nodes.delete(t);const r=new Set,s=[];for(const o of i.graphics){const a=o.objectId,n=this._graphics.get(a);if(!n)continue;const d=this._duplicates.get(a);if(d){const h=d.indexOf(t);if(h===-1)continue;if(d.splice(h,1),n.nodeIndex===t){let p=this.getNode(d[0]);for(let l=1;l<d.length;l++){const g=this.getNode(d[l]);(p==null||g!=null&&g.node.level>p.node.level)&&(p=g)}p!=null&&r.add(p)}d.length===1&&this._duplicates.delete(a)}else this._graphics.delete(a),s.push(o)}s.length>0&&this.emit("change",{added:[],removed:s}),r.forEach(o=>this._updateForeignGraphics(o))}_updateForeignGraphics(t){const i=[],r=t.node.index,s=t.node.level;let o=0;for(;o<t.graphics.length;){const a=t.graphics[o].nodeIndex;if(a===r){o++;continue}let n=1;for(;o+n<t.graphics.length&&t.graphics[o+n].nodeIndex===a;)n++;const d=this.getNode(a);if(d!=null&&d.node.level>s)o+=n;else{for(let h=o;h<o+n;h++){const p=t.graphics[h];p.nodeIndex=r,this._updateAndCompare(p,t,h)&&i.push(p)}o+=n}}i.length>0&&this._notifyUpdated(i)}toArray(){return Array.from(this._graphics.values())}find(t){let i;return V(this._graphics,r=>!!t(r)&&(i=r,!0)),i}forEach(t){this._graphics.forEach(i=>t(i))}forEachNode(t){this._nodes.forEach((i,r)=>t(i,r))}get nodeCount(){return this._nodes.size}_checkInvariants(){const t=new Map;this._nodes.forEach((i,r)=>{i.graphics.forEach(s=>{t.set(s.objectId,1+(t.get(s.objectId)??0)),this._duplicates.get(s.objectId)})}),t.forEach((i,r)=>{const s=this._graphics.get(r);if(!s||!this._nodes.get(s.nodeIndex))return;const o=this._duplicates.get(r);o&&o.forEach(a=>{this._nodes.get(a)})})}}const R=ge();class Ae{constructor(t,i,r,s){this.graphics=t,this.featureIds=i,this.attributeInfo=r,this.node=s}}let u=class extends ve(Ie(Ee(ne(pe)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this._pendingEditsQueue=Promise.resolve(),this.loadedGraphics=new Se((e,t,i)=>Pe(e,t,i),e=>this.processor.graphicsCore.recreateGraphics(e)),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(e,t){return e.url===this.layer.url&&this._i3sOverrides.isEmpty?e.load(t).then(()=>{var r;_e(this.layer,e,this._i3sOverrides),this.layer=e,this._i3sOverrides.destroy();const i=(r=this.view.resourceController)==null?void 0:r.memoryController;this._i3sOverrides=new P({view:this.view,layer:e,memoryController:i}),y(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()}):null}initialize(){var t,i;this.addResolvingPromise(this.layer.indexInfo);const e=(t=this.view.resourceController)==null?void 0:t.memoryController;this._i3sOverrides=new P({view:this.view,layer:this.layer,memoryController:e}),fe(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new he({layerView:this}),this._updatingHandles.add(()=>this.layer.rangeInfos,r=>this._rangeInfosChanged(r),N),this._updatingHandles.add(()=>this.layer.renderer,(r,s)=>this._rendererChange(r,s)),this._updatingHandles.add(()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted],()=>this._filterChange()),this.addHandles(H(()=>C.I3S_TREE_SHOW_TILES,r=>{if(r&&!this._treeDebugger){const s=this._controller.crsIndex;Q(()=>import("./I3STreeDebugger-FGy0zkYd.js"),__vite__mapDeps([0,1,2,3,4]),import.meta.url).then(({I3STreeDebugger:o})=>{!this._treeDebugger&&C.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new o({lv:this,view:this.view,nodeSR:s}))})}else r||!this._treeDebugger||C.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},N)),this._set("processor",new de({owner:this,preferredUpdatePolicy:Oe.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:r=>this._updateClippingExtent(r)})),(i=this.processor.elevationAlignment)==null||i.events.on("invalidate-elevation",({extent:r,spatialReference:s})=>this._controller.updateElevationChanged(r,s)),this.supportsHeightUnitConversion&&(this._verticalScale=q("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(`psl-${this.uid}`),this._controller=new oe({layerView:this}),ye(this.layer.geometryDefinitions)&&(this._worker=new M(r=>this.view.resourceController.immediate.schedule(r))),this.addHandles(this.layer.on("apply-edits",r=>this._updatingHandles.addPromise(r.result))),this.addHandles(this.layer.on("edits",r=>{const s=this._pendingEditsQueue.then(()=>this._handleEdits(r)).then();this._pendingEditsQueue=s,this._updatingHandles.addPromise(s)})),this.when(()=>{this._setupQueryEngine(),this._updatingHandles.add(()=>this.maximumNumberOfFeatures,r=>this._controller.featureTarget=r,N),this._updatingHandles.add(()=>this.suspended,r=>{r&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=y(this._treeDebugger),this._i3sOverrides=y(this._i3sOverrides),this._set("processor",y(this.processor)),this._controller=y(this._controller),this._queryEngine=y(this._queryEngine),this._worker=y(this._worker),this._memCache=y(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=y(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){var e;return((e=this._controller)==null?void 0:e.updatingProgress)??1}get requiredFields(){var e;return((e=this._fieldsHelper)==null?void 0:e.requiredFields)??[]}get maximumNumberOfFeatures(){var t,i;const e=(i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.displayFeatureLimit;return(e==null?void 0:e.maximumNumberOfFeatures)??0}set maximumNumberOfFeatures(e){e!=null?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){var e;return!this.suspended&&!!((e=this._controller)!=null&&e.useMaximumNumberOfFeatures)&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort((t,i)=>t-i):null}get lodFactor(){return this.layer.semantic==="Labels"?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}get contentVisible(){var e;return!this.suspended&&!!((e=this._controller)!=null&&e.rootNodeVisible)}get legendEnabled(){var e;return this.contentVisible&&((e=this.i3slayer)==null?void 0:e.legendEnabled)===!0}async whenGraphicAttributes(e,t){return be(this.layer,e,this._getObjectIdField(),t,()=>[...this.loadedGraphics.nodes()])}getHit(e){var r;if(!this.loadedGraphics)return null;const t=se(this.loadedGraphics.find(s=>s.uid===e),this.layer),i=this._getObjectIdField();return(r=t==null?void 0:t.attributes)!=null&&r[i]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}isUpdating(){var e,t,i;return!!((e=this._controller)!=null&&e.updating||(t=this.processor)!=null&&t.updating||(i=this._fieldsHelper)!=null&&i.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return ue(this._attributeEditingContext,e)}async _decompressBinaryPointData(e,t){const i={geometryBuffer:e.geometryBuffer};this._worker==null&&(this._worker=new M(s=>this.view.resourceController.immediate.schedule(s)));const r=await this._worker.invoke(i,t);if(r==null)throw new Error("Failed to decompress Draco point data");return{positionData:r.positions,featureIds:r.featureIds}}async addNode(e,t,i){var f;if(!O(t)&&!Ge(t))throw new Error;if(this.loadedGraphics.hasNode(e.index))return void w.getLogger(this).error("I3S node "+e.id+" already added");const r=this.layer.fullExtent!=null?Me(this.layer.fullExtent.clone(),.5):null,{featureIds:s,pointPositions:o}=O(t)?await this._extractBinaryPointPositions(e,t,i):this._extractLegacyPointPositions(t),a=new Array;this._validatePositions(e,s,o,r,a);const n=this._controller.crsVertex,d=this.view.spatialReference;F(o,n,0,o,d,0,s.length);const h=O(t)?e.level:0,p=this._createGraphics(s,o,e.index,h),l=new Ae(p,s,t.attributeDataInfo,e);if(await this._i3sOverrides.applyAttributeOverrides(l.featureIds,t.attributeDataInfo,i),e.numFeatures=l.graphics.length,this._updateNodeMemory(e),D(l),a.length>0&&(this._computeObb(e,a,n),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(l);if(this._verticalScale!=null)for(const b of l.graphics)this._verticalScale(b.geometry);const g=this.view._stage.renderView.objectAndLayerIdRenderHelper;if(g!=null){const b=T(this.view.map,this.layer.uid);for(let x=0;x<l.featureIds.length;x++){const E=l.featureIds[x];g.setUidToObjectAndLayerId(E,l.graphics[x].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled&&!b&&De(this.layer,(f=this.view.popup)==null?void 0:f.defaultPopupTemplateEnabled),l.node.resources.attributes,x)}}this.loadedGraphics.addNode(e.index,l),this._controller.updateLoadStatus(e.index,!0),this._filterNode(l),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,i){const r=this._controller.crsIndex,s=r.isGeographic?this.view.renderSpatialReference:r;F(t,i,0,t,s,0,t.length/3),e.serviceObbInIndexSR=we(new Ne(t,3)),r.isGeographic&&(X(e.serviceObbInIndexSR.center,s,I,r),e.serviceObbInIndexSR.center=I)}isNodeLoaded(e){return this.loadedGraphics.hasNode(e)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(e,t,i){const r=await this._decompressBinaryPointData(t,i),s=r.positionData,o=3,a=s.length/o,n=G(3*a),d=e.serviceObbInIndexSR!=null?e.serviceObbInIndexSR.center:U,h=Math.abs(d[2])*2**-20;for(let p=0;p<a;p++){const l=p*o;n[l]=s[l]+d[0],n[l+1]=s[l+1]+d[1],n[l+2]=s[l+2]+d[2],Math.abs(n[l+2])<h&&(n[l+2]=0)}return{featureIds:r.featureIds?te(r.featureIds):[],pointPositions:n}}_extractLegacyPointPositions(e){var s,o;const t=e.pointData.length,i=G(3*t),r=new Array;for(let a=0;a<t;a++){const n=e.pointData[a],d=n.featureDataPosition,h=d.length,p=((s=n.geometries)==null?void 0:s[0])??Re[h],l=n.featureIds[0];if(p.type!=="Embedded"||p.params.type!=="points"||h<2||h>3)continue;const g=((o=p.params.vertexAttributes)==null?void 0:o.position)??[0,0,0],f=3*r.length;i[f]=d[0]+g[0],i[f+1]=d[1]+g[1],i[f+2]=h===3?d[2]+g[2]:NaN,r.push(l)}return{featureIds:r,pointPositions:i}}_validatePositions(e,t,i,r,s){if(r==null&&e.serviceObbInIndexSR)return;const o=t.length,a=3;for(let n=0;n<o;n++){const d=n*a;z(I,i[d],i[d+1],i[d+2]);const h=!Number.isNaN(i[2]);r==null||(h?k(r,I):B(r,I))||(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&w.getLogger(this).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&w.getLogger(this).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),e.serviceObbInIndexSR||s.push(I[0],I[1],I[2])}}_createGraphics(e,t,i,r){const s=e.length,o=3,a=this._getObjectIdField(),n=this.processor.graphicsCore,d=new Array,h=this.view.spatialReference;for(let p=0;p<s;p++){const l=e[p],g={};l!=null&&(g[a]=l);const f=l??S.generateUID(),b=p*o,x=isNaN(t[b+2])?void 0:t[b+2],E=ee(t[b],t[b+1],x,h),v=this.loadedGraphics.get(f);if(v!=null)(v.level==null||v.level<r)&&(_.property="geometry",_.graphic=v,_.oldValue=v.geometry,_.newValue=E,v.geometry=E,v.level=r,n.graphicUpdateHandler(_)),d.push(v);else{const L=S.generateUID();d.push({objectId:f,uid:L,geometry:E,attributes:g,visible:!0,nodeIndex:i,level:r})}}return d}_updateNodeMemory(e){e.memory=4096+(e.numFeatures!=null?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce((i,r)=>ie(r)+i,Z(e.featureIds)+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode((e,t)=>{if(e){const i=e.node;this._updateNodeMemory(i),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)}),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this.loadedGraphics.getNode(e);return t==null?null:(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeNode(e),this._treeDebugger&&this._treeDebugger.update(),t)}async loadCachedNodeData(e){var t;return(t=this._memCache)==null?void 0:t.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,i,r){this.loadedGraphics.hasNode(e.index)?w.getLogger(this).error("I3S node "+e.id+" already added"):(await this._i3sOverrides.applyAttributeOverrides(t.featureIds,i,r),t.attributeInfo=i,this.loadedGraphics.addNode(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),D(t),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this.loadedGraphics.forEachNode(t=>e.push(t.node.id)),e.sort()}getVisibleNodes(){const e=new Array;return this.loadedGraphics.forEachNode(t=>e.push(t.node)),e}getLoadedNodeIndices(e){this.loadedGraphics.forEachNode((t,i)=>e.push(i))}getLoadedAttributes(e){const t=this.loadedGraphics.getNode(e);if((t==null?void 0:t.attributeInfo)!=null)return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this.loadedGraphics.getNode(e);if((t==null?void 0:t.attributeInfo)!=null)return t.attributeInfo.attributeData}_setAttributeData(e,t){const i=this.loadedGraphics.getNode(e);(i==null?void 0:i.attributeInfo)!=null&&(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const r=this.loadedGraphics.getNode(e);r!=null&&(await this._i3sOverrides.applyAttributeOverrides(r.featureIds,t,i),r.attributeInfo=t,this._attributeValuesChanged(r))}_attributeValuesChanged(e){if(D(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.node.index,i=new Array;e.graphics.forEach(r=>r.nodeIndex===t&&i.push(r.uid)),this.processor.graphicsCore.updateLabelingInfo(i)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||re}_getGlobalIdField(){var e;return(e=this.layer.associatedLayer)==null?void 0:e.globalIdField}async _rendererChange(e,t){const{layer:{fieldsIndex:i}}=this,r=new Set;let s,o;e?(await e.collectRequiredFields(r,i),s=Array.from(r).sort()):s=[],r.clear(),t?(await t.collectRequiredFields(r,i),o=Array.from(r).sort()):o=[],s.length===o.length&&s.every((a,n)=>s[n]===o[n])||this._reloadAllNodes()}_rangeInfosChanged(e){e!=null&&e.length>0&&w.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode(e=>this._filterNode(e))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,i=this._excludeObjectIdsSorted,r=this._getObjectIdField();for(const s of e.graphics){const o=s.visible,a=!t||this._evaluateClause(t,s),n=i==null||K(i,s.attributes[r])<0;s.visible=a&&n,o!==s.visible&&(_.graphic=s,_.property="visible",_.oldValue=o,_.newValue=s.visible,this.processor.graphicsCore.graphicUpdateHandler(_))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(e):new A(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t==null?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(e==null?this.createQuery():A.from(e))}_setupQueryEngine(){const e=()=>this.processor.featureStore;this._queryEngine=new le({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return e()},hasZ:this.hasZ,hasM:this.hasM},priority:Fe.FEATURE_QUERY_ENGINE})}get usedMemory(){var e,t;return((t=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:t.usedMemory)??0}get unloadedMemory(){var e,t,i;return .8*((((e=this._controller)==null?void 0:e.unloadedMemoryEstimate)??0)+(((i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.unprocessedMemoryEstimate)??0))}get ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}async _handleEdits(e){const t=this._attributeEditingContext,i=await ce(t,e);me(t,i)}get _attributeEditingContext(){const e=this._getObjectIdField(),t=this._getGlobalIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,globalIdField:t,forEachNode:i=>this.loadedGraphics.forEachNode(r=>i(r.node,r.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:i=>this.getAttributeData(i),setAttributeData:(i,r,s)=>{this._setAttributeData(i,r);const o=this.loadedGraphics.getNode(i);if(s!=null){const a=this.loadedGraphics.get(s.attributes[e]);a!=null&&this.processor.graphicsCore.recreateGraphics([a])}else o!=null&&this.processor.graphicsCore.recreateGraphics(o.graphics)},clearMemCache:()=>{}}}get performanceInfo(){return new xe(this.usedMemory,this.loadedGraphics.length,-1,this.maximumNumberOfFeatures,this.loadedGraphics.nodeCount,this.processor.graphicsCore.performanceInfo)}get test(){}};c([m()],u.prototype,"processor",void 0),c([m({type:W})],u.prototype,"filter",void 0),c([m()],u.prototype,"loadedGraphics",void 0),c([m()],u.prototype,"i3slayer",null),c([m()],u.prototype,"_controller",void 0),c([m()],u.prototype,"updating",void 0),c([m()],u.prototype,"suspended",void 0),c([m()],u.prototype,"holeFilling",void 0),c([m(Ce)],u.prototype,"updatingProgress",void 0),c([m()],u.prototype,"updatingProgressValue",null),c([m(R.requiredFields)],u.prototype,"requiredFields",null),c([m(R.availableFields)],u.prototype,"availableFields",void 0),c([m()],u.prototype,"_fieldsHelper",void 0),c([m({type:Number})],u.prototype,"maximumNumberOfFeatures",null),c([m({readOnly:!0})],u.prototype,"maximumNumberOfFeaturesExceeded",null),c([m()],u.prototype,"_excludeObjectIdsSorted",null),c([m({readOnly:!0})],u.prototype,"lodFactor",null),c([m({readOnly:!0})],u.prototype,"hasM",null),c([m({readOnly:!0})],u.prototype,"hasZ",null),c([m()],u.prototype,"contentVisible",null),c([m({readOnly:!0})],u.prototype,"legendEnabled",null),u=c([Y("esri.views.3d.layers.SceneLayerGraphicsView3D")],u);const Ls=u;function Ge(e){return"pointData"in e}function O(e){return"geometryBuffer"in e&&e.geometryBuffer!==null}function Pe(e,t,i){const r=t.attributeInfo;if((r==null?void 0:r.loadedAttributes)==null||r.attributeData==null)return!1;let s=!1;for(const{name:o}of r.loadedAttributes)if(r.attributeData[o]){const a=$(r.attributeData[o],i);a!==e.attributes[o]&&(e.attributes[o]=a,s=!0)}return s}function D(e){const t=e.attributeInfo,i=e.node.index;if((t==null?void 0:t.loadedAttributes)!=null&&t.attributeData!=null)for(let r=0;r<e.graphics.length;r++){const s=e.graphics[r];if(s.nodeIndex===i){s.attributes||(s.attributes={});for(const{name:o}of t.loadedAttributes)t.attributeData[o]&&(s.attributes[o]=$(t.attributeData[o],r))}}}function Me(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.zmin!=null&&e.zmax!=null&&(e.zmin-=t,e.zmax+=t),e.mmin!=null&&e.mmax!=null&&(e.mmin-=t,e.mmax+=t),e}const Re={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},I=J(),_={graphic:null,property:null,oldValue:null,newValue:null};export{Ls as default};
