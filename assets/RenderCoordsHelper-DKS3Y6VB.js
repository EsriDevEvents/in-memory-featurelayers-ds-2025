import{J as R,fN as v,fI as c,fK as $,dx as M,ad as P,aI as m,aN as d,aL as x,aJ as h,lA as B,aT as G,dG as b,a4 as S}from"./index-Dv-JqQDv.js";import{a as g}from"./spatialReferenceEllipsoidUtils-MFgRhPLs.js";import{c as Z}from"./projectPointToVector-ARkh6gdu.js";import{t as I}from"./projectVectorToPoint-D_lHmELE.js";import{n as y}from"./projectVectorToVector-BbXjU1Ty.js";import{H as U,_ as z}from"./boundedPlane-DBcMJiAN.js";import{Z as L,c as T}from"./sphere-j1PWtIhy.js";import{c as i,m as E,S as F}from"./plane-4BN6ZBDV.js";import{t as A}from"./ElevationProvider-DZcTQ1wD.js";import{l as u}from"./ViewingMode-Dodu7ZZk.js";function J(r){const{value:t,operations:e}=r;return{operations:e,value:e.create(t)}}function N(r,t,e){return r.operations.setExtent(r.value,t,e.value),e}function O(r){return{operations:r,value:r.create()}}function w(r,t,e=O(r)){return e.operations=r,r.copy(t,e.value),e}function Y(r){return w(T,L(0,0,0,v(r).radius))}const _=2**50;function j(){return w(z,U([0,0,0],[_,0,0],[0,_,0]))}function q(r,t,e){return r.operations.axisAt(r.value,t,c.Z,e)}function H(r,t,e,s){return r.operations.axisAt(r.value,t,e,s)}function K(r,t,e){return r.operations.intersectRay(r.value,t,e)}function W(r,t,e){return r.operations.intersectRayClosestSilhouette(r.value,t,e)}function X(r,t){return r.operations.altitudeAt(r.value,t)}function C(r,t,e,s){return r.operations.setAltitudeAt(r.value,t,e,s)}function k(r,t,e,s){return t!==s&&$(s,t),M(a,s[12],s[13],s[14]),C(r,a,e,a),s[12]=a[0],s[13]=a[1],s[14]=a[2],s}function f(r,t,e){return r.operations.elevate(r.value,t,e.value)}const a=P();function at(r,t,e,s,n){return n[0]=m(r,t),n[1]=m(r,e),n[2]=m(r,s),n}function ut(r,t,e,s,n){d(e,r),d(l,t),x(l,l),h(s,l,e),h(n,s,e)}function ct(r,t){return r?g(t):t.isGeographic?R.PlateCarree:t}const l=P();class p{constructor(t,e,s,n){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=s,this._coordinateSystem=n,this._tmpCoordinateSystem=J(n),this.referenceEllipsoid=v(e),this.sphericalPCPF=g(e)}set extent(t){t&&N(this._coordinateSystem,t,this._coordinateSystem)}getAltitude(t){return X(this._coordinateSystem,t)}setAltitude(t,e,s=t){return C(this._coordinateSystem,s,e,t)}setAltitudeOfTransformation(t,e){k(this._coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return q(this._coordinateSystem,t,e)}worldBasisAtPosition(t,e,s){return H(this._coordinateSystem,t,e,s)}basisMatrixAtPosition(t,e){const s=this.worldBasisAtPosition(t,c.X,i.get()),n=this.worldBasisAtPosition(t,c.Y,i.get()),o=this.worldBasisAtPosition(t,c.Z,i.get());return B(e,s[0],s[1],s[2],0,n[0],n[1],n[2],0,o[0],o[1],o[2],0,0,0,0,1),e}headingAtPosition(t,e){const s=this.worldUpAtPosition(t,i.get()),n=this.worldBasisAtPosition(t,c.Y,i.get()),o=E(e,n,s);return G(o)}intersectManifoldClosestSilhouette(t,e,s){return f(this._coordinateSystem,e,this._tmpCoordinateSystem),W(this._tmpCoordinateSystem,t,s),s}intersectManifold(t,e,s){f(this._coordinateSystem,e,this._tmpCoordinateSystem);const n=i.get();return K(this._tmpCoordinateSystem,t,n)?d(s,n):null}intersectInfiniteManifold(t,e,s){if(this.viewingMode===u.Global)return this.intersectManifold(t,e,s);f(this._coordinateSystem,e,this._tmpCoordinateSystem);const n=this._tmpCoordinateSystem.value,o=i.get();return F(n.plane,t,o)?d(s,o):null}toRenderCoords(t,e,s){return A(t)?Z(t,e,this.spatialReference):y(t,e,s,this.spatialReference)}fromRenderCoords(t,e,s=null){return A(e)?(s!=null&&(e.spatialReference=s),I(t,this.spatialReference,e)?e:null):y(t,this.spatialReference,e,s)?e:null}static create(t,e){switch(t){case u.Local:return new p(u.Local,e,b(e),j());case u.Global:return new p(u.Global,e,1,Y(e))}}static renderUnitScaleFactor(t,e){return S(t)/S(e)}}export{at as q,p as v,ut as w,ct as z};
