import{dG as l,jE as b,dx as M,ad as P}from"./index-Dv-JqQDv.js";import{a as S,b as T}from"./elevationInfoUtils-Cey9W7Lb.js";function k(e,a){const s=e==null?void 0:e.geometry;if(!e||(s==null?void 0:s.type)!=="mesh"||!a)return;const{renderCoordsHelper:d,elevationProvider:x}=a,{camera:c}=a.state,{extent:t}=s,{center:h,spatialReference:r}=t,z=l(r),n=b(r),v=l(d.spatialReference),w=t.width*z,y=t.height*n,p=(t.zmax??0)*n,u=p-(t.zmin??0)*n,C=Math.max(w,y,u)/v,{x:m,y:i}=h,f=h.z??0;M(o,m,i,f),d.toRenderCoords(o,r,o);const g=C/c.computeScreenPixelSizeAt(o);if(g>c.width*A)return"meshTooClose";if(g<j)return"meshTooFar";const R=S(e),{absoluteZ:$}=T(m,i,p,r,a,R);return $<(x.getElevation(m,i,f,r,"ground")??0)*n+u*E?"meshUnderground":"mesh"}const j=20,A=1,E=.1,o=P();export{k as getDrawMeshHelpMessage};
