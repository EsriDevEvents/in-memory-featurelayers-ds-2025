import{fS as m,ge as E,Q as S,ad as i,dB as y,aN as H,fC as $,gf as I,aJ as T,ca as g,aI as M,dA as h,dz as F}from"./index-Dv-JqQDv.js";import{t as R,S as C,E as G,F as P,j as U,e as b}from"./plane-4BN6ZBDV.js";import{m as A,h as k}from"./sphere-j1PWtIhy.js";import{p as q}from"./elevationInfoUtils-Cey9W7Lb.js";import{g as w}from"./ray-DhyD5gIv.js";import{T as z,e as B,i as J}from"./ElevationProvider-DZcTQ1wD.js";import{w as N}from"./verticalOffsetUtils-DVynISE7.js";import{w as _}from"./InteractiveToolBase-ClRFM-nV.js";function j(n,r){return O(n,()=>r)}function on(n){return O(n,r=>r.plane)}function O(n,r){const t=i(),l=i();let o=!1;return e=>{const a=r(e);if(e.action==="start"){const c=m(e.screenStart,E(R.get())),u=w(n.state.camera,c,x);u!=null&&(o=C(a,u,t))}if(!o)return null;const s=m(e.screenEnd,E(R.get())),d=w(n.state.camera,s,x);return d==null?null:C(a,d,l)?{...e,renderStart:t,renderEnd:l,plane:a,ray:d}:null}}function K(n,r,t=0,l=null,o=null){let e=null;return a=>{if(a.action==="start"&&(e=n.sceneIntersectionHelper.intersectElevationFromScreen($(a.screenStart.x,a.screenStart.y),r,t,o),e!=null&&l!=null&&!I(e,e,l))||e==null)return null;const s=n.sceneIntersectionHelper.intersectElevationFromScreen($(a.screenEnd.x,a.screenEnd.y),r,t,o);return s!=null&&(l==null||I(s,s,l))?{...a,mapStart:e,mapEnd:s}:null}}function Q(n,r,t,l=null,o=null){return K(n,t,q(r,n,t),l,o)}function sn(n,r,t,l){const o=t.toMap(n.screenStart);return o!=null?Q(r,o,t.elevationInfo,l):null}function L(n,r){const t=v,l=D,o=G();n.renderCoordsHelper.worldUpAtPosition(r,t);const e=T(P(o),t,g(l,r,n.state.camera.eye));return T(e,e,t),U(r,e,o)}function an(n,r,t){let l=null;const o=new _;return o.next(j(n,L(n,r))).next(V(n,r)).next(W(n,t)).next(e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,l=e}),e=>(l=null,o.execute(e),l)}function V(n,r){const t=i(),l=y(r);n.renderCoordsHelper.worldUpAtPosition(r,t);const o=i(),e=i(),a=s=>(g(s,s,r),b(t,s,s),n.viewingMode==="global"&&y(s)*Math.sign(M(t,s))<.001-l&&g(s,h(s,t,.001),r),F(s,s,r),s);return s=>(s.renderStart=a(H(o,s.renderStart)),s.renderEnd=a(H(e,s.renderEnd)),s)}function un(n,r){const t=l=>{const o=m(l,E(R.get())),e=w(n.state.camera,o,x);return e==null?null:k(r,e,v,D)[1]};return l=>{const o=t(l.screenStart);if(o==null)return null;const e=t(l.screenEnd);return e==null?null:{...l,renderStart:o,renderEnd:e}}}function W(n,r){const t=n.renderCoordsHelper;return l=>{const o=t.fromRenderCoords(l.renderStart,new S({spatialReference:r})),e=t.fromRenderCoords(l.renderEnd,new S({spatialReference:r}));return o!=null&&e!=null?{...l,mapStart:o,mapEnd:e}:null}}var f;function cn(n){let r=null;return t=>{switch(t.action){case"start":r=n.disableDisplay();break;case"end":case"cancel":r!=null&&(r.remove(),r=null)}return t}}function dn(n,r=null){const t=z(n.state.viewingMode);t.options.selectionMode=!0,t.options.store=B.MIN,t.options.hud=!1;const l=$(),o={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},e=i(),a=r??n.spatialReference,s=c=>{n.map.ground&&n.map.ground.opacity<1?o.exclude.add(N):o.exclude.delete(N),n.sceneIntersectionHelper.intersectIntersectorScreen(m(c,l),t,o);const u=t.results.min;let p;if(u.getIntersectionPoint(e))p=u.intersector===J.TERRAIN?f.GROUND:f.OTHER;else{if(!t.results.ground.getIntersectionPoint(e))return null;p=f.GROUND}return{location:n.renderCoordsHelper.fromRenderCoords(e,new S({spatialReference:a})),surfaceType:p}};let d;return c=>{if(c.action==="start"){const p=s(c.screenStart);d=p!=null?p.location:null}if(d==null)return null;const u=s(c.screenEnd);return(u==null?void 0:u.location)!=null?{...c,mapStart:d,mapEnd:u.location,surfaceType:u.surfaceType}:null}}(function(n){n[n.GROUND=0]="GROUND",n[n.OTHER=1]="OTHER"})(f||(f={}));const v=i(),D=i(),x=A();export{W as A,on as C,Q as D,f as F,an as G,sn as M,j as O,un as k,cn as q,dn as z};
