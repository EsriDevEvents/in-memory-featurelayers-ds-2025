import{j as o,y as l,P as m,ac as d,bF as p,bH as y,bG as N,U as b}from"./index-Dv-JqQDv.js";import{d as h}from"./UtilityNetwork-OOqCDdIn.js";let a=class extends d{constructor(r){super(r),this.namedTraceConfigurations=[]}};o([l({type:[h],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],a.prototype,"namedTraceConfigurations",void 0),a=o([m("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],a);const C=a;async function O(r,t,i){const e=p(r),s=t.toJSON();t.globalIds&&t.globalIds.length>0&&(s.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(s.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(s.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(s.names=JSON.stringify(t.names));const n={...s,f:"json"},g=y({...e.query,...n}),c=N(g,{...i,method:"post"}),f=`${e.path}/traceConfigurations/query`,{data:u}=await b(f,c);return C.fromJSON(u)}export{O as queryNamedTraceConfigurations};
