import{dx as h,dz as p,dA as m,dP as $,aI as c,aN as f,aL as g,aJ as d,ad as u}from"./index-Dv-JqQDv.js";import{V as x}from"./sphere-j1PWtIhy.js";import{U as M}from"./mathUtils-urfecwwD.js";import{o as y}from"./geodesicAreaMeasurementUtils-CmEBSq_6.js";function j(t,n){const a=x(n);h(a,0,0,0);for(let r=0;r<t.length;++r)p(a,a,t[r]);m(a,a,1/t.length);let l=0;for(let r=0;r<t.length;++r)l=Math.max(l,$(a,t[r]));n[3]=Math.sqrt(l)}function q(t,n){if(t.length<3)throw new Error("need at least 3 points to fit a plane");M(t[0],t[1],t[2],n)}function A(t,n){return c(t,n)+t[3]}function E(t,n,a,l){const r=b;return f(r.rings[0][0],t),f(r.rings[0][1],n),f(r.rings[0][2],a),f(r.rings[0][3],t),r.spatialReference=l,y(r)}function I(t,n=null,a=!0){const r=(o,i)=>{if(i[0]===0&&i[1]===0&&i[2]===0)return!1;for(let s=0;s<o.length;++s)if(c(i,o[s])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return n&&f(n,t[0]),!0;h(e,0,0,0);for(let o=0;o<t.length;++o)p(e,e,t[o]);if(g(e,e),r(t,e))return n&&f(n,e),!0;if(!a)return!1;for(let o=0;o<t.length;++o)for(let i=0;i<t.length;++i)if(o!==i&&(d(e,t[o],t[i]),g(e,e),r(t,e)))return n&&f(n,e),!0;return!1}function J(t){return t.pointerType!=="mouse"||t.button===0}const b={hasM:!1,hasZ:!0,rings:[[u(),u(),u(),u()]],spatialReference:null,type:"polygon"},e=u();export{J as M,j as g,q as h,I as j,E as m,A as p};
