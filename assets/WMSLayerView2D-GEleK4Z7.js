import{br as $,G as R,o as S,hM as q,x as U,j as h,y as f,P as I}from"./index-Dv-JqQDv.js";import{a as w}from"./BitmapContainer-D7hi0L29.js";import{f as E}from"./LayerView2D-Ulqog2NM.js";import{_ as H}from"./ExportStrategy-MueE7KUE.js";import{y as W}from"./LayerView-6INZgiuX.js";import{i as A}from"./RefreshableLayerView-BkpnzSC-.js";import{m as F}from"./WMSLayerView-B8XJKt5V.js";import"./WGLContainer-m5Dqdi-d.js";import"./definitions-ByNBSgP9.js";import"./LabelMetric-CSrxjJk_.js";import"./enums-BRXbslMp.js";import"./Texture-BsiXXqc8.js";import"./enums-BlUEVwJR.js";import"./Program-By3cM00b.js";import"./BufferObject-Dhco7AlX.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./vec2f32-BbH2jxlN.js";import"./VertexArrayObject-Czm05pt7.js";import"./WGLBrushVTLSymbol-Hhd0CFGx.js";import"./DefaultUI-BWAdHYa0.js";import"./jsxFactory-C3RLkrq9.js";import"./UpdatingHandles-C0Kh7aEt.js";import"./InputManager-BwD1PEf3.js";import"./signal-0tlktF45.js";import"./Map-DV4_DU8O.js";import"./Ground-DpNOewuO.js";import"./CollectionFlattener-73Uag1LF.js";import"./editableLayers-V9yr_aA-.js";import"./catalogUtils-CiWgGrdS.js";import"./TablesMixin-BFT6ikAR.js";import"./GraphicsCollection-DlcRCtU0.js";import"./ReactiveMap-DxvIcNmk.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-DKZWDFXK.js";import"./a11yUtils-DW8v-NB5.js";import"./heightModelInfoUtils-DQiO1_HQ.js";import"./ViewingMode-Dodu7ZZk.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CEs_6QlQ.js";import"./Compass-DBSyeZOs.js";import"./utils-DsJqvptN.js";import"./GoTo-BCG1WN4R.js";import"./NavigationToggle-CRz1xlJz.js";import"./Zoom-C6srvgaZ.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-DUy4DuxJ.js";import"./DefaultVertexAttributeLayouts-BaFfZuup.js";import"./mat3-B7LiNcRs.js";import"./DisplayObject-NwP1D55U.js";import"./TileKey-DixmkgbB.js";import"./mat2df32-orApM5a3.js";import"./mat2d-C6u6dH6d.js";import"./vec3f32-Cw9Q6TO_.js";import"./Container-BCZInv5n.js";import"./EffectView-D358IIvW.js";import"./highlightReasons-Bl95o-z6.js";import"./Tile-BD3hIcqg.js";import"./quickselect-D0_cvEX6.js";import"./earcut-BqgeR2O3.js";import"./vec2-DGogPjh1.js";import"./vec2f64-Diu2Kaa8.js";import"./MapView-BeVtHZG4.js";import"./Viewpoint-kowK2Ox4.js";import"./Cyclical-L5YKfO29.js";import"./TileInfo-Dsgw3bLM.js";import"./TileKey-DZd6gJy7.js";import"./viewpointUtils-CBa44EU3.js";import"./mat2df64-CBKYtunK.js";import"./unitBezier-BX6NeAEr.js";import"./TileStrategy-Bm9AEGL5.js";import"./QueueProcessor-DHxW4yaI.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-DO2jUIHL.js";import"./ClipRect-C_x5PYDD.js";import"./layerViewUtils-D2JqIDZ8.js";import"./Bitmap-B9B0VE0s.js";import"./ExportWMSImageParameters-BvK7zzdR.js";import"./timeSupport-CVYAdt33.js";import"./timeUtils-DFs82Cpv.js";import"./tagSymbols-BPcGfZon.js";let p=class extends F(A(E(W))){constructor(){super(...arguments),this.bitmapContainer=new w}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(i=>{$(i)||R.getLogger(this).error(i)})}attach(){const{layer:t}=this,{imageMaxHeight:i,imageMaxWidth:o}=t;this.bitmapContainer=new w,this.container.addChild(this.bitmapContainer),this.strategy=new H({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:i,imageMaxWidth:o,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(S(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=q(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:i,bitmapContainer:o}=this,{x:e,y:m}=t,{spatialReference:b}=i;let r,a=0,d=0;if(o.children.some(M=>{const{width:c,height:g,resolution:y,x:s,y:n}=M,l=s+y*c,x=n-y*g;return e>=s&&e<=l&&m<=n&&m>=x&&(r=new U({xmin:s,ymin:x,xmax:l,ymax:n,spatialReference:b}),a=c,d=g,!0)}),!r)return null;const u=r.width/a,v=Math.round((e-r.xmin)/u),C=Math.round((r.ymax-m)/u);return{extent:r,width:a,height:d,x:v,y:C}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,o,e){return this.layer.fetchImageBitmap(t,i,o,{timeExtent:this.timeExtent,...e})}};h([f()],p.prototype,"strategy",void 0),h([f()],p.prototype,"updating",void 0),p=h([I("esri.views.2d.layers.WMSLayerView2D")],p);const li=p;export{li as default};
