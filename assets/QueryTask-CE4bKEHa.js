const __vite__fileDeps=["./meshFeatureSet-BAO-Vp8I.js","./index-Dv-JqQDv.js","./index-CejX7rzk.css","./Mesh-CgH6w2J9.js","./axisAngleDegrees-CRhw0Lf9.js","./quat-B52zwwOM.js","./mat3f64-BBpwCtoL.js","./quatf64-BrpT0VRp.js","./MeshComponent-CKdOnzQW.js","./imageUtils-CyYQ2a5H.js","./MeshVertexAttributes-CERcIROX.js","./MeshLocalVertexSpace-Bf4xmfpu.js","./MeshTransform-BahjckjL.js","./mat4f64-Dk4dwAN8.js","./meshVertexSpaceUtils-1Rv9Wig9.js","./triangulationUtils-BhDjnI5P.js","./earcut-BqgeR2O3.js","./_commonjsHelpers-DCkdB7M8.js","./DoubleArray-DzYWDmvK.js","./Indices-BTetzIKW.js","./plane-4BN6ZBDV.js","./vec2f64-Diu2Kaa8.js","./mathUtils-urfecwwD.js","./deduplicate-DQWVMiBh.js","./projection-CsHR6jE_.js","./mat3-B7LiNcRs.js","./spatialReferenceEllipsoidUtils-MFgRhPLs.js","./computeTranslationToOriginAndRotation-DBznw1xD.js","./BufferView-_0HdWB6j.js","./vec2-DGogPjh1.js","./vec3-zd-aCjeY.js","./vec4-mLjVaC0N.js","./projectPointToVector-ARkh6gdu.js","./vertexSpaceConversion-lekgA4Rd.js","./External-DIu21-ag.js","./executeRelationshipQuery-1_18Q0k0.js","./queryAttachments-BP_C19hX.js","./executeTopFeaturesQuery-B2Y9i74d.js","./queryTopFeatures-QrDcMVMo.js","./executeForTopIds-wSD_Sh5i.js","./executeForTopExtents-mbwsIQhE.js","./executeForTopCount-Cm56opVY.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{bF as _,k5 as T,M as S,x as A,j as n,y as l,k6 as D,P as N,b_ as j,I as Q,p as P,k7 as $,k8 as q,dZ as L,gK as p,_ as u,Z as f,$ as h,s as y,a0 as J}from"./index-Dv-JqQDv.js";import{s as z,a as k}from"./executeForIds-DCQXBrc7.js";async function C(e,t,r){const o=_(e),s=await T(o,S.from(t),{...r}),i=s.data.extent;return!i||isNaN(i.xmin)||isNaN(i.ymin)||isNaN(i.xmax)||isNaN(i.ymax)?{count:s.data.count,extent:null}:{count:s.data.count,extent:A.fromJSON(i)}}let a=class extends j{constructor(e){super(e),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.url=null}get parsedUrl(){return Q(this.url)}async execute(e,t){const r=await this.executeJSON(e,t);return this.featureSetFromJSON(e,r,t)}async executeJSON(e,t){var c;const r=this._normalizeQuery(e),o=((c=e.outStatistics)==null?void 0:c[0])!=null,s=P("featurelayer-pbf-statistics"),i=!o||s;let d;if(this.pbfSupported&&i)try{d=await $(this.url,r,t)}catch(m){if(m.name!=="query:parsing-pbf")throw m;this.pbfSupported=!1}return this.pbfSupported&&i||(d=await q(this.url,r,t)),this._normalizeFields(d.fields),d}async featureSetFromJSON(e,t,r){if(!this._queryIs3DObjectFormat(e)||this.infoFor3D==null||!t.features)return L.fromJSON(t);const{meshFeatureSetFromJSON:o}=await p(u(()=>import("./meshFeatureSet-BAO-Vp8I.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]),import.meta.url),r);return o(e,this.infoFor3D,t)}executeForCount(e,t){return z(this.url,this._normalizeQuery(e),t)}executeForExtent(e,t){return C(this.url,this._normalizeQuery(e),t)}executeForIds(e,t){return k(this.url,this._normalizeQuery(e),t)}async executeRelationshipQuery(e,t){const[{default:r},{executeRelationshipQuery:o}]=await p(Promise.all([u(()=>import("./index-Dv-JqQDv.js").then(s=>s.w0),__vite__mapDeps([1,2]),import.meta.url),u(()=>import("./executeRelationshipQuery-1_18Q0k0.js"),__vite__mapDeps([35,1,2]),import.meta.url)]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),o(this.url,e,t)}async executeRelationshipQueryForCount(e,t){const[{default:r},{executeRelationshipQueryForCount:o}]=await p(Promise.all([u(()=>import("./index-Dv-JqQDv.js").then(s=>s.w0),__vite__mapDeps([1,2]),import.meta.url),u(()=>import("./executeRelationshipQuery-1_18Q0k0.js"),__vite__mapDeps([35,1,2]),import.meta.url)]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),o(this.url,e,t)}async executeAttachmentQuery(e,t){const{executeAttachmentQuery:r,fetchAttachments:o,processAttachmentQueryResult:s}=await p(u(()=>import("./queryAttachments-BP_C19hX.js"),__vite__mapDeps([36,1,2]),import.meta.url),t),i=_(this.url);return s(i,await(this.queryAttachmentsSupported?r(i,e,t):o(i,e,t)))}async executeTopFeaturesQuery(e,t){const{executeTopFeaturesQuery:r}=await p(u(()=>import("./executeTopFeaturesQuery-B2Y9i74d.js"),__vite__mapDeps([37,1,2,38]),import.meta.url),t);return r(this.parsedUrl,e,this.sourceSpatialReference,t)}async executeForTopIds(e,t){const{executeForTopIds:r}=await p(u(()=>import("./executeForTopIds-wSD_Sh5i.js"),__vite__mapDeps([39,1,2,38]),import.meta.url),t);return r(this.parsedUrl,e,t)}async executeForTopExtents(e,t){const{executeForTopExtents:r}=await p(u(()=>import("./executeForTopExtents-mbwsIQhE.js"),__vite__mapDeps([40,1,2,38]),import.meta.url),t);return r(this.parsedUrl,e,t)}async executeForTopCount(e,t){const{executeForTopCount:r}=await p(u(()=>import("./executeForTopCount-Cm56opVY.js"),__vite__mapDeps([41,1,2,38]),import.meta.url),t);return r(this.parsedUrl,e,t)}_normalizeQuery(e){let t=S.from(e);t.sourceSpatialReference=t.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(t=t===e?t.clone():t,t.gdbVersion=e.gdbVersion||this.gdbVersion,t.dynamicDataSource=e.dynamicDataSource?D.from(e.dynamicDataSource):this.dynamicDataSource);const{infoFor3D:r}=this;if(r!=null&&this._queryIs3DObjectFormat(e)){t=t===e?t.clone():t,t.formatOf3DObjects=null;const{supportedFormats:o,queryFormats:s}=r,i=f("model/gltf-binary",o)??h("glb",o),d=f("model/gltf+json",o)??h("gltf",o);for(const c of s){if(c===i){t.formatOf3DObjects=c;break}c!==d||t.formatOf3DObjects||(t.formatOf3DObjects=c)}if(!t.formatOf3DObjects)throw new y("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(t.outSpatialReference&&!J(t.outSpatialReference,this.sourceSpatialReference))throw new y("query:unsupported-out-spatial-reference","3D object feature services do not support projection of geometries");if(t.outFields==null||!t.outFields.includes("*")){t=t===e?t.clone():t,t.outFields==null&&(t.outFields=[]);const{originX:c,originY:m,originZ:x,translationX:b,translationY:F,translationZ:O,scaleX:g,scaleY:R,scaleZ:V,rotationX:E,rotationY:w,rotationZ:I,rotationDeg:v}=r.transformFieldRoles;t.outFields.push(c,m,x,b,F,O,g,R,V,E,w,I,v)}}return t}_normalizeFields(e){if(this.fieldsIndex!=null&&e!=null)for(const t of e){const r=this.fieldsIndex.get(t.name);r&&Object.assign(t,r.toJSON())}}_queryIs3DObjectFormat(e){return this.infoFor3D!=null&&e.returnGeometry===!0&&e.multipatchOption!=="xyFootprint"&&!e.outStatistics}};n([l({type:D})],a.prototype,"dynamicDataSource",void 0),n([l()],a.prototype,"fieldsIndex",void 0),n([l()],a.prototype,"gdbVersion",void 0),n([l()],a.prototype,"infoFor3D",void 0),n([l({readOnly:!0})],a.prototype,"parsedUrl",null),n([l()],a.prototype,"pbfSupported",void 0),n([l()],a.prototype,"queryAttachmentsSupported",void 0),n([l()],a.prototype,"sourceSpatialReference",void 0),n([l({type:String})],a.prototype,"url",void 0),a=n([N("esri.layers.graphics.sources.support.QueryTask")],a);const X=a;export{X as x};
