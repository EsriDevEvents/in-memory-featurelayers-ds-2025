import{j as e,y as i,x as p,J as u,eu as d,P as y,ac as w,bI as c}from"./index-Dv-JqQDv.js";import{c as r}from"./UtilityNetwork-OOqCDdIn.js";var a;let t=a=class extends w{static from(o){return c(a,o)}constructor(o){super(o),this.gdbVersion=null,this.sessionID=null,this.validationType=null,this.validateArea=null,this.validationSet=null,this.outSpatialReference=null}writeOutSR(o,s,l){if(o!=null){const{wkid:n}=o;s[l]=JSON.stringify({wkid:n})}}};e([i({type:String,json:{write:!0}})],t.prototype,"gdbVersion",void 0),e([i({type:String,json:{write:!0}})],t.prototype,"sessionID",void 0),e([i({type:r.apiValues,json:{type:r.jsonValues,read:r.read,write:r.write}})],t.prototype,"validationType",void 0),e([i({type:p,json:{write:!0}})],t.prototype,"validateArea",void 0),e([i({type:[Object],json:{write:!0}})],t.prototype,"validationSet",void 0),e([i({type:u,json:{write:{allowNull:!0,target:"outSR"}}})],t.prototype,"outSpatialReference",void 0),e([d("outSpatialReference")],t.prototype,"writeOutSR",null),t=a=e([y("esri.rest.networks.support.ValidateNetworkTopologyParameters")],t);const S=t;export{S as default};
