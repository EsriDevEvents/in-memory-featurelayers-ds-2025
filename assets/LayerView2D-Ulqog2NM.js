import{j as s,y as a,a7 as w,P as u,fx as S,x as b,bK as q,ar as A,eX as $,s as P,o as p,ev as o,cu as _}from"./index-Dv-JqQDv.js";import{h as C}from"./Container-BCZInv5n.js";import{p as x}from"./Tile-BD3hIcqg.js";import{a as g,p as O}from"./ClipRect-C_x5PYDD.js";import{c as U}from"./layerViewUtils-D2JqIDZ8.js";var d;const V={base:S,key:"type",typeMap:{extent:b,polygon:q}};let h=d=class extends g{constructor(n){super(n),this.type="geometry",this.geometry=null}clone(){var n;return new d({geometry:((n=this.geometry)==null?void 0:n.clone())??null})}commitVersionProperties(){this.commitProperty("geometry")}};s([a({types:V,json:{read:w,write:!0}})],h.prototype,"geometry",void 0),h=d=s([u("esri.views.layers.support.Geometry")],h);const j=h;let l=class extends g{constructor(n){super(n),this.type="path",this.path=[]}commitVersionProperties(){this.commitProperty("path")}};s([a({type:[[[Number]]],json:{write:!0}})],l.prototype,"path",void 0),l=s([u("esri.views.layers.support.Path")],l);const H=l,c=A.ofType({key:"type",base:null,typeMap:{rect:O,path:H,geometry:j}}),I=n=>{let i=class extends n{constructor(){super(...arguments),this.attached=!1,this.clips=new c,this.highlightOptions=null,this.lastUpdateId=-1,this.moving=!1,this.updateRequested=!1,this._visibleAtCurrentScale=!0}initialize(){var y,v,m;const t=((y=this.view)==null?void 0:y.spatialReferenceLocked)??!0;((v=this.view)==null?void 0:v.spatialReference)&&t&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new P("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new C),this.container.fadeTransitionEnabled=!0,this.container.visible=!1,this.container.endTransitions(),this.addHandles([p(()=>this.suspended,e=>{this.container&&(this.container.visible=!e)},o),p(()=>this.updateSuspended,e=>{this.view&&!e&&this.updateRequested&&this.view.requestUpdate()},o),p(()=>{var e;return((e=this.layer)==null?void 0:e.opacity)??1},e=>{this.container&&(this.container.opacity=e)},o),p(()=>this.layer&&"blendMode"in this.layer?this.layer.blendMode:"normal",e=>{this.container&&(this.container.blendMode=e)},o),p(()=>this.layer&&"effect"in this.layer?this.layer.effect:null,e=>{this.container&&(this.container.effect=e)},o),p(()=>this.highlightOptions,e=>this.container.highlightOptions=e,o),_(()=>this.clips,"change",()=>{this.container&&(this.container.clips=this.clips)},o),p(()=>{var e;return{scale:(e=this.view)==null?void 0:e.scale,scaleRange:this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null}},({scale:e,scaleRange:R})=>{const f=U(R,e);f!==this._visibleAtCurrentScale&&(this._visibleAtCurrentScale=f)},o)],"constructor"),(m=this.view)!=null&&m.whenLayerView?this.view.whenLayerView(this.layer).then(e=>{e===this&&this.processAttach()},()=>{}):this.when().then(()=>{this.processAttach()},()=>{}))}destroy(){this.processDetach(),this.updateRequested=!1}get spatialReferenceSupported(){var r;const t=(r=this.view)==null?void 0:r.spatialReference;return t==null||this.supportsSpatialReference(t)}get updating(){var t;return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!!((t=this._updatingHandles)!=null&&t.updating))}get visibleAtCurrentScale(){return this._visibleAtCurrentScale}processAttach(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}processDetach(){this.attached&&(this.attached=!1,this.removeHandles("attach"),this.detach(),this.updateRequested=!1)}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.updateSuspended||this.view.requestUpdate())}processUpdate(t){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",t),this.updateRequested&&!this.updateSuspended&&(this.updateRequested=!1,this.update(t))):this.updateRequested=!1}hitTest(t,r){return Promise.resolve(null)}supportsSpatialReference(t){return!0}canResume(){return!!this.spatialReferenceSupported&&!!super.canResume()&&this.visibleAtCurrentScale}getSuspendInfo(){const t=super.getSuspendInfo(),r=!this.spatialReferenceSupported;return r&&(t.spatialReferenceNotSupported=r),t}addAttachHandles(t){this.addHandles(t,"attach")}};return s([a()],i.prototype,"attached",void 0),s([a({type:c,set(t){const r=$(t,this._get("clips"),c);this._set("clips",r)}})],i.prototype,"clips",void 0),s([a()],i.prototype,"container",void 0),s([a({type:x})],i.prototype,"highlightOptions",void 0),s([a()],i.prototype,"moving",void 0),s([a({readOnly:!0})],i.prototype,"spatialReferenceSupported",null),s([a({readOnly:!0})],i.prototype,"updateParameters",void 0),s([a()],i.prototype,"updateRequested",void 0),s([a()],i.prototype,"updating",null),s([a()],i.prototype,"view",void 0),s([a()],i.prototype,"_visibleAtCurrentScale",void 0),s([a({readOnly:!0})],i.prototype,"visibleAtCurrentScale",null),i=s([u("esri.views.2d.layers.LayerView2D")],i),i};export{j as a,I as f};
