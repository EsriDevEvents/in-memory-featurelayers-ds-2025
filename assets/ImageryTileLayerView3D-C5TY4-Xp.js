import{fV as a,s as b,gc as x,j as u,y,P as T}from"./index-Dv-JqQDv.js";import{s as I}from"./rasterProjectionHelper-8XqYElTD.js";import{l as z}from"./LayerView3D-CIKXmWRc.js";import{p as R}from"./TiledLayerView3D-C1XBDsID.js";import{v as G}from"./Viewshed.glsl-Dgwz8otk.js";import{L as _}from"./enums-BlUEVwJR.js";import{c as P,l as w,_ as S,p as v,A as O,f as C,m as f}from"./rasterUtils-D9IFG7hL.js";import{u as L}from"./ImageryTileLayerView-BAood2fT.js";import{y as $}from"./LayerView-6INZgiuX.js";import{i as A}from"./RefreshableLayerView-BkpnzSC-.js";import{r as E}from"./drapedUtils-nWPHxHp9.js";import{a as j}from"./capabilities-C84AMSCg.js";import"./heightModelInfoUtils-DQiO1_HQ.js";import"./WaterSurface.glsl-BZtDPgAH.js";import"./RenderGeometry-D3-u-2b6.js";import"./vec2f64-Diu2Kaa8.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-DzYWDmvK.js";import"./DefaultTechniqueConfiguration-C28-5KBi.js";import"./mat4f64-Dk4dwAN8.js";import"./Indices-BTetzIKW.js";import"./basicInterfaces-wONHx_SN.js";import"./Util-CQaYQWOS.js";import"./debugFlags-CfrzpJ7g.js";import"./interfaces-B8ge7Jg9.js";import"./VertexAttribute-BnAa5VW0.js";import"./ViewingMode-Dodu7ZZk.js";import"./triangle-0a93pGd5.js";import"./sphere-j1PWtIhy.js";import"./plane-4BN6ZBDV.js";import"./mat3f64-BBpwCtoL.js";import"./quatf64-BrpT0VRp.js";import"./mathUtils-urfecwwD.js";import"./lineSegment-C_r0Slta.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-CO_Ks2k6.js";import"./Texture-BsiXXqc8.js";import"./renderState-yUi34s5A.js";import"./Matrix4PassUniform-B-NXMru_.js";import"./BindType-BmZEZMMh.js";import"./mat3-B7LiNcRs.js";import"./vec2-DGogPjh1.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./orientedBoundingBox-BiAE_4Zn.js";import"./quat-B52zwwOM.js";import"./spatialReferenceEllipsoidUtils-MFgRhPLs.js";import"./computeTranslationToOriginAndRotation-DBznw1xD.js";import"./ElevationProvider-DZcTQ1wD.js";import"./boundedPlane-DBcMJiAN.js";import"./verticalOffsetUtils-DVynISE7.js";import"./hydratedFeatures-D9SfIMrp.js";import"./projectVectorToVector-BbXjU1Ty.js";import"./projectPointToVector-ARkh6gdu.js";import"./frustum-W7EQ25hI.js";import"./axisAngleDegrees-CRhw0Lf9.js";import"./weather-K8rA5AE9.js";import"./Scheduler-KZBBWfDI.js";import"./signal-0tlktF45.js";import"./debugFlags-CVnXAL57.js";import"./Float4DrawUniform-DDO6IFxX.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-BaSixQu1.js";import"./InterleavedLayout-B5L5JJLV.js";import"./BufferView-_0HdWB6j.js";import"./types-D0PSWh4d.js";import"./floatRGBA-BTfDfCN4.js";import"./Intersector-BLO31d1u.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-Czm05pt7.js";import"./BufferObject-Dhco7AlX.js";import"./ColorMaterial.glsl-D5JrE5f2.js";import"./OutputHighlight.glsl-Bs_35Qno.js";import"./vec2f32-BbH2jxlN.js";import"./dehydratedFeatures-OxpG9XrG.js";import"./edgeUtils-BJ2b_x7k.js";import"./DecodeSymbolColor.glsl-C6Fgb1JQ.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./vec3-zd-aCjeY.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-BhDjnI5P.js";import"./deduplicate-DQWVMiBh.js";import"./Normals-bmFJkGdK.js";import"./RealisticTree.glsl-Cu8STgaR.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./vec4-mLjVaC0N.js";import"./DefaultMaterial_COLOR_GAMMA-32Y4lnr4.js";import"./resourceUtils-Bb92V0U7.js";import"./CIMSymbolHelper-DBCkPMeB.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CnE29zYd.js";import"./GeometryUtils-CGcKgdcH.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./mat2d-C6u6dH6d.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./lineStippleUtils-BesjtKyl.js";import"./projectVectorToPoint-D_lHmELE.js";import"./MeshComponent-CKdOnzQW.js";import"./imageUtils-CyYQ2a5H.js";import"./MeshVertexAttributes-CERcIROX.js";import"./meshVertexSpaceUtils-1Rv9Wig9.js";import"./MeshLocalVertexSpace-Bf4xmfpu.js";import"./projection-CsHR6jE_.js";import"./DefaultLayouts-CvcU3NmP.js";import"./webStyleSymbolUtils-DSxq9N1_.js";import"./Intersector-TO0eVp6c.js";import"./terrainUtils-BNct5mku.js";import"./TileInfo-Dsgw3bLM.js";import"./TileKey-DZd6gJy7.js";import"./layerViewUtils-D2JqIDZ8.js";import"./Viewpoint-kowK2Ox4.js";import"./Cyclical-L5YKfO29.js";import"./jsxFactory-C3RLkrq9.js";import"./GraphicsCollection-DlcRCtU0.js";import"./RenderCoordsHelper-DKS3Y6VB.js";import"./DefaultUI-BWAdHYa0.js";import"./UpdatingHandles-C0Kh7aEt.js";import"./InputManager-BwD1PEf3.js";import"./Map-DV4_DU8O.js";import"./Ground-DpNOewuO.js";import"./CollectionFlattener-73Uag1LF.js";import"./editableLayers-V9yr_aA-.js";import"./catalogUtils-CiWgGrdS.js";import"./TablesMixin-BFT6ikAR.js";import"./ReactiveMap-DxvIcNmk.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-DKZWDFXK.js";import"./a11yUtils-DW8v-NB5.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CEs_6QlQ.js";import"./Compass-DBSyeZOs.js";import"./utils-DsJqvptN.js";import"./GoTo-BCG1WN4R.js";import"./NavigationToggle-CRz1xlJz.js";import"./Zoom-C6srvgaZ.js";import"./viewpointUtils-Bk1t9hXb.js";import"./earthUtils-D6ZAndqJ.js";import"./spatialReferenceSupport-hDa_4tCr.js";import"./ElevationSamplerData-CTsi29Ag.js";import"./Environment-Jr1y7jce.js";import"./quantityUtils-CvTt11a2.js";import"./Program-By3cM00b.js";import"./ShadowCastVisualizeTechniqueConfiguration-MkEH-Ojf.js";import"./euclideanLengthMeasurementUtils-DU6F1DKF.js";import"./ray-DhyD5gIv.js";import"./ZoomMomentumEstimator-BsIgzjw7.js";import"./labelFormatUtils-Dqk4IbyQ.js";import"./FeatureTileDescriptor3D-7bhVDC-s.js";import"./elevationInfoUtils-Cey9W7Lb.js";import"./ElevationQueryTileCache-BJ_8u3U9.js";import"./LayerConstants-B33OP6sh.js";import"./ElevationRange-BrgM1moX.js";import"./geometryServiceUtils-Bg30a3zi.js";import"./project-DnDtHu17.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./RenderableTile-D8pMnDSe.js";import"./enums-BRzLM11V.js";import"./TileStrategy-Bm9AEGL5.js";import"./TileKey-DixmkgbB.js";import"./QueueProcessor-DHxW4yaI.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-BaFfZuup.js";import"./DisplayObject-NwP1D55U.js";import"./StyleDefinition-BK3ROBTO.js";import"./resources-DCd8hSXv.js";import"./edgeProcessing-AsuFhimy.js";import"./testSVGPremultipliedAlpha-D_Za_c1C.js";import"./RenderingContext-4XQ9xHRL.js";import"./ProgramCache-DtSlkqy0.js";import"./timeSupport-CVYAdt33.js";import"./timeUtils-DFs82Cpv.js";import"./utils-CXgSw6Sd.js";import"./tagSymbols-BPcGfZon.js";import"./popupUtils-CSsimScH.js";const g={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class F{constructor(t,r,e=null,o=null){this.lij=t,this.type="raster-tile",this._memoryUsed=null,this._source=null,this._symbolizerParameters=null,this._bandIds=null,this._interpolation=null,this._dirty=!1,this._transformGrid=null,this.isRendereredSource=!1,this.symbolizerRenderer=null,this.rawPixelData=null,this.opacity=1,this.source=r,this.width=e||r.width,this.height=o||r.height}get source(){return this._source}set source(t){this._source=t,this._rasterTexture=a(this._rasterTexture),this._memoryUsed=null}get symbolizerParameters(){return this.isRendereredSource?{...g,maxCutOff:[1,1,1],factor:[1,1,1]}:this._symbolizerParameters||g}set symbolizerParameters(t){this._symbolizerParameters=t}get bandIds(){return this._bandIds}set bandIds(t){t!=null&&t.length>0?this._bandIds&&t.every((r,e)=>{var o;return!!((o=this._bandIds)!=null&&o[e])&&r===this._bandIds[e]})||(this._bandIds=t,this._dirty=!0):this._bandIds=null}get interpolation(){return this._interpolation||"nearest"}set interpolation(t){if(this._interpolation=t,this._rasterTexture!=null){const r=this._getRasterTextureInterpolation(t);this._rasterTexture.setSamplingMode(r==="bilinear"?_.LINEAR:_.NEAREST)}}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid=t,this._transformGridTexture=a(this._transformGridTexture),this._memoryUsed=null}bind(t){return!!(this.source&&this.source.pixels&&this.source.pixels.length>0)&&((this._rasterTexture==null||this._dirty)&&this._updateRasterTexture(t,this.bandIds),this._rasterTexture!=null&&(this._updateColormapTexture(t),this.transformGrid&&this._transformGridTexture==null&&(this._transformGridTexture=P(t,this.transformGrid))),!0)}getUniforms(){const{symbolizerParameters:t,transformGrid:r,width:e,height:o,opacity:s}=this,n=w(r,[e,o],[this.source.width,this.source.height],s),p=S(t.colormap,t.colormapOffset),d=this.symbolizerParameters.type==="stretch"?v(this.symbolizerParameters):null,m=this.symbolizerParameters.type==="hillshade"?O(this.symbolizerParameters):null;return new G(n,p,d||m,this._rasterTexture,this._transformGridTexture,this._colormapTexture)}get isBilinearWithStretchColorRamp(){const{symbolizerParameters:t}=this;return this.interpolation==="bilinear"&&t.colormap!=null&&t.type==="stretch"}get memoryUsage(){if(this._memoryUsed==null){const t=[this._rasterTexture,this._transformGridTexture,this._colormapTexture];this._memoryUsed=t.map(r=>r!=null?r.descriptor.width*r.descriptor.height*4:0).reduce((r,e)=>r+e,0)}return this._memoryUsed}release(){return this._rasterTexture=a(this._rasterTexture),this._transformGridTexture=a(this._transformGridTexture),this._colormapTexture=a(this._colormapTexture),this.source=null,this.transformGrid=null,this.rawPixelData=null,!0}_updateRasterTexture(t,r){const e=this.source?this.source.extractBands(r):null;if(!(e!=null&&e.pixels&&e.pixels.length>0))return void(this._rasterTexture=a(this._rasterTexture));const o=r==null&&this.bandIds==null||r!=null&&this.bandIds!=null&&r.join("")===this.bandIds.join("");if(this._rasterTexture!=null&&o)return;this._rasterTexture=a(this._rasterTexture);const s=this._getRasterTextureInterpolation(this.interpolation);this._rasterTexture=C(t,e,s,this.isRendereredSource||this.hasStretchTypeNone())}hasStretchTypeNone(){return"stretchType"in this.symbolizerParameters&&this.symbolizerParameters.stretchType==="none"&&!this.symbolizerParameters.useGamma&&this.source.pixelType==="u8"}_getRasterTextureInterpolation(t){return this.symbolizerParameters.type==="lut"||t==="nearest"||t==="majority"||this.isBilinearWithStretchColorRamp?"nearest":"bilinear"}_updateColormapTexture(t){const r=this._colormap,e=this.symbolizerParameters.colormap;return e?r?e.length!==r.length||e.some((o,s)=>o!==r[s])?(this._colormapTexture=a(this._colormapTexture),this._colormapTexture=f(t,e),void(this._colormap=e)):void 0:(this._colormapTexture=f(t,e),void(this._colormap=e)):(this._colormapTexture=a(this._colormapTexture),void(this._colormap=null))}}let h=class extends L(A(R(z($)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this._isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new b("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const i=x(()=>{var t,r;return(r=(t=this.view)==null?void 0:t.basemapTerrain)==null?void 0:r.tilingSchemeLocked}).then(()=>{const t=this.view.basemapTerrain.tilingScheme,r=this.layer.tileInfo;this._isAlignedMapTile=["png","png24","png32","jpg","mixed"].includes(r.format)&&t.compatibleWith(r),this.tileInfo=this._isAlignedMapTile?r:t.toTileInfo(),this._updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction,this.timeExtent],()=>this.refresh())});this.addResolvingPromise(i)}destroy(){this.layer.decreaseRasterJobHandlerUsage()}get _blankTile(){const i=document.createElement("canvas"),t=i.getContext("2d"),[r,e]=this.tileInfo.size;return i.width=r,i.height=e,t.clearRect(0,0,r,e),t.getImageData(0,0,r,e)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){var e,o;const i=this.layer.tileInfo,t=(e=this.tileInfo.lodAt(0))==null?void 0:e.scale,r=(o=this.layer.tileInfo.lodAt(i.lods.length-1))==null?void 0:o.scale;return this.levelRangeFromScaleRange(t,r)}_getfullExtent(){var i;return I(this.layer.serviceRasterInfo,((i=this.view.basemapTerrain)==null?void 0:i.spatialReference)??this.view.spatialReference)}async fetchTile(i,t){const r=this.tileInfo,e=this._canSymbolizeInWebGL(),o={tileInfo:r,requestRawData:e,signal:t.signal,timeExtent:this.timeExtent,requestAsImageElement:this._isAlignedMapTile,noClip:!1},{layer:s}=this,[n,p,d]=i,m=await s.fetchTile(n,p,d,o);if(m instanceof HTMLImageElement)return m;let c=m==null?void 0:m.pixelBlock;if(c==null)return this._blankTile;if(!e&&(c=await s.applyRenderer(m),c==null))return this._blankTile;const l=new F([n,p,d],c,r.size[0],r.size[1]);return e?(l.symbolizerRenderer=s.symbolizer.rendererJSON,l.symbolizerParameters=s.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(n)),l.transformGrid=m.transformGrid,l.bandIds=s.bandIds):(l.isRendereredSource=!0,l.bandIds=null),l.interpolation=s.interpolation,l}_getSymbolizerOptions(i){var r;const t=this.tileInfo.lodAt(i).resolution;return{pixelBlock:null,isGCS:((r=this.view.basemapTerrain)==null?void 0:r.spatialReference)!=null?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(i){this._canSymbolizeInWebGL()&&JSON.stringify(i.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(i.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(i.lij[0])))}createFetchPopupFeaturesQueryGeometry(i,t){return E(i,t,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){var s,n,p;const i=j(),{symbolizer:t}=this.layer,r=(n=(s=t.lookup)==null?void 0:s.colormapLut)==null?void 0:n.indexedColormap,e=!!((p=this.layer.rasterFunction)!=null&&p.hasClipFunction),o=r&&r.length>4*(i.maxTextureSize||4906);return t.canRenderInWebGL&&!o&&!e}};u([y({readOnly:!0})],h.prototype,"_blankTile",null),u([y({readOnly:!0})],h.prototype,"imageFormatIsOpaque",null),u([y({readOnly:!0})],h.prototype,"hasMixedImageFormats",null),u([y({readOnly:!0})],h.prototype,"dataLevelRange",null),h=u([T("esri.views.3d.layers.ImageryTileLayerView3D")],h);const oi=h;export{oi as default};
