import{hL as P,ee as Q,bN as N,j as n,y as l,P as v,id as B,b_ as C,hM as H,ev as w,gH as E,G as y,e8 as f,hP as x,a6 as F,X as L,ia as G,F as T,s as S,M as V,hO as U,ar as $,g8 as W,o as I,br as j,pq as k,iu as D,am as z,ga as X}from"./index-Dv-JqQDv.js";import"./BuildingGroupSublayer-twbufGC8.js";import{O as Y}from"./WhereClause-B3tk4NQp.js";import"./BuildingComponentSublayer-mjaY4keK.js";import{A as Z,u as J,n as K}from"./I3SMeshView3D-DdqVkNgx.js";import{f as ee}from"./edgeUtils-BJ2b_x7k.js";import{n as te}from"./DecodeSymbolColor.glsl-C6Fgb1JQ.js";import{P as b,d as re,h as ie,o as se}from"./I3SQueryFeatureStore-Cm2GBL3j.js";import{L as oe,Z as ne,X as le}from"./I3SUtil-D61YPx_K.js";import{u as ae,t as pe}from"./TemporalSceneLayerView-bYhDCINe.js";import{u as ue,n as de,p as M}from"./popupUtils-CSsimScH.js";import{c as O}from"./layerViewUtils-D2JqIDZ8.js";import{I as me}from"./Scheduler-KZBBWfDI.js";import{l as he}from"./LayerView3D-CIKXmWRc.js";import{t as ye}from"./Viewshed.glsl-Dgwz8otk.js";import{y as ce}from"./LayerView-6INZgiuX.js";import"./TimeOnly-DM31kLsz.js";import"./capabilities-CAweHQni.js";import"./I3SIndexInfo-B_vW_l6t.js";import"./I3SLayerDefinitions-CEyaY2ZA.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./mat3-B7LiNcRs.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./UpdatingHandles-C0Kh7aEt.js";import"./Transform-C34taZRO.js";import"./RenderTexture-B_EQhGnV.js";import"./sphere-j1PWtIhy.js";import"./plane-4BN6ZBDV.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-urfecwwD.js";import"./ElevationRange-BrgM1moX.js";import"./WaterSurface.glsl-BZtDPgAH.js";import"./RenderGeometry-D3-u-2b6.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-DzYWDmvK.js";import"./DefaultTechniqueConfiguration-C28-5KBi.js";import"./Indices-BTetzIKW.js";import"./basicInterfaces-wONHx_SN.js";import"./Util-CQaYQWOS.js";import"./debugFlags-CfrzpJ7g.js";import"./interfaces-B8ge7Jg9.js";import"./VertexAttribute-BnAa5VW0.js";import"./ViewingMode-Dodu7ZZk.js";import"./triangle-0a93pGd5.js";import"./lineSegment-C_r0Slta.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-CO_Ks2k6.js";import"./enums-BlUEVwJR.js";import"./Texture-BsiXXqc8.js";import"./renderState-yUi34s5A.js";import"./Matrix4PassUniform-B-NXMru_.js";import"./BindType-BmZEZMMh.js";import"./vec2-DGogPjh1.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./orientedBoundingBox-BiAE_4Zn.js";import"./quat-B52zwwOM.js";import"./spatialReferenceEllipsoidUtils-MFgRhPLs.js";import"./computeTranslationToOriginAndRotation-DBznw1xD.js";import"./ElevationProvider-DZcTQ1wD.js";import"./boundedPlane-DBcMJiAN.js";import"./verticalOffsetUtils-DVynISE7.js";import"./hydratedFeatures-D9SfIMrp.js";import"./projectVectorToVector-BbXjU1Ty.js";import"./projectPointToVector-ARkh6gdu.js";import"./frustum-W7EQ25hI.js";import"./axisAngleDegrees-CRhw0Lf9.js";import"./weather-K8rA5AE9.js";import"./Float4DrawUniform-DDO6IFxX.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-BaSixQu1.js";import"./InterleavedLayout-B5L5JJLV.js";import"./BufferView-_0HdWB6j.js";import"./types-D0PSWh4d.js";import"./floatRGBA-BTfDfCN4.js";import"./Intersector-BLO31d1u.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-Czm05pt7.js";import"./BufferObject-Dhco7AlX.js";import"./ColorMaterial.glsl-D5JrE5f2.js";import"./OutputHighlight.glsl-Bs_35Qno.js";import"./vec2f32-BbH2jxlN.js";import"./dehydratedFeatures-OxpG9XrG.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./vec3-zd-aCjeY.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-BhDjnI5P.js";import"./deduplicate-DQWVMiBh.js";import"./Normals-bmFJkGdK.js";import"./RealisticTree.glsl-Cu8STgaR.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./vec4-mLjVaC0N.js";import"./DefaultMaterial_COLOR_GAMMA-32Y4lnr4.js";import"./resourceUtils-Bb92V0U7.js";import"./CIMSymbolHelper-DBCkPMeB.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CnE29zYd.js";import"./GeometryUtils-CGcKgdcH.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./mat2d-C6u6dH6d.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./lineStippleUtils-BesjtKyl.js";import"./projectVectorToPoint-D_lHmELE.js";import"./MeshComponent-CKdOnzQW.js";import"./imageUtils-CyYQ2a5H.js";import"./MeshVertexAttributes-CERcIROX.js";import"./meshVertexSpaceUtils-1Rv9Wig9.js";import"./MeshLocalVertexSpace-Bf4xmfpu.js";import"./projection-CsHR6jE_.js";import"./DefaultLayouts-CvcU3NmP.js";import"./webStyleSymbolUtils-DSxq9N1_.js";import"./Intersector-TO0eVp6c.js";import"./LayerConstants-B33OP6sh.js";import"./I3SOverrides-DH9VWmWl.js";import"./I3SNode-Cv9xfXKG.js";import"./I3SBinaryReader-DZaX-yfP.js";import"./ReactiveSet-DhWxTTYq.js";import"./meshFeatureSet-BAO-Vp8I.js";import"./Mesh-CgH6w2J9.js";import"./MeshTransform-BahjckjL.js";import"./vertexSpaceConversion-lekgA4Rd.js";import"./External-DIu21-ag.js";import"./FeatureLayerView3D-DPnr5z3s.js";import"./FeatureLayerViewBase3D-CiEiZa0a.js";import"./HeatmapDensity.glsl-BXLwH3Zb.js";import"./timeSupport-CVYAdt33.js";import"./timeUtils-DFs82Cpv.js";import"./utils-CXgSw6Sd.js";import"./tagSymbols-BPcGfZon.js";import"./projectExtentUtils-qZ3Epvl6.js";import"./geometryServiceUtils-Bg30a3zi.js";import"./project-DnDtHu17.js";import"./ReactiveMap-DxvIcNmk.js";import"./dehydratedFeatureComparison-JrNDQOYF.js";import"./signal-0tlktF45.js";import"./terrainUtils-BNct5mku.js";import"./TileInfo-Dsgw3bLM.js";import"./TileKey-DZd6gJy7.js";import"./queryForSymbologySnapping-C2apfyTa.js";import"./elevationInfoUtils-Cey9W7Lb.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-Car90PVM.js";import"./rendererConversion-Bt-Ek7t_.js";import"./optimizedFeatureQueryEngineAdapter-wwbEsU1w.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-C2urojqP.js";import"./quickselect-D0_cvEX6.js";import"./InputManager-BwD1PEf3.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-DYFX0Grk.js";import"./timeSupport-DgYx0Uxy.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./FeatureStore-B1gQldsG.js";import"./BoundsStore-CcA6vL2e.js";import"./Program-By3cM00b.js";import"./heatmapTextureUtils-Y8Y_7g3k.js";import"./WorkerHandle-DGrN1tjM.js";import"./EventedSet-AoomztOi.js";import"./FeatureLayerView-QzxjxJhQ.js";import"./RefreshableLayerView-BkpnzSC-.js";import"./debugFlags-CVnXAL57.js";import"./Viewpoint-kowK2Ox4.js";import"./Cyclical-L5YKfO29.js";import"./jsxFactory-C3RLkrq9.js";import"./GraphicsCollection-DlcRCtU0.js";import"./RenderCoordsHelper-DKS3Y6VB.js";import"./DefaultUI-BWAdHYa0.js";import"./Map-DV4_DU8O.js";import"./Ground-DpNOewuO.js";import"./CollectionFlattener-73Uag1LF.js";import"./editableLayers-V9yr_aA-.js";import"./catalogUtils-CiWgGrdS.js";import"./TablesMixin-BFT6ikAR.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-DKZWDFXK.js";import"./a11yUtils-DW8v-NB5.js";import"./heightModelInfoUtils-DQiO1_HQ.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-CEs_6QlQ.js";import"./Compass-DBSyeZOs.js";import"./utils-DsJqvptN.js";import"./GoTo-BCG1WN4R.js";import"./NavigationToggle-CRz1xlJz.js";import"./Zoom-C6srvgaZ.js";import"./viewpointUtils-Bk1t9hXb.js";import"./earthUtils-D6ZAndqJ.js";import"./spatialReferenceSupport-hDa_4tCr.js";import"./ElevationSamplerData-CTsi29Ag.js";import"./Environment-Jr1y7jce.js";import"./quantityUtils-CvTt11a2.js";import"./ShadowCastVisualizeTechniqueConfiguration-MkEH-Ojf.js";import"./euclideanLengthMeasurementUtils-DU6F1DKF.js";import"./ray-DhyD5gIv.js";import"./ZoomMomentumEstimator-BsIgzjw7.js";import"./labelFormatUtils-Dqk4IbyQ.js";import"./FeatureTileDescriptor3D-7bhVDC-s.js";import"./ElevationQueryTileCache-BJ_8u3U9.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./RenderableTile-D8pMnDSe.js";import"./enums-BRzLM11V.js";import"./TileStrategy-Bm9AEGL5.js";import"./TileKey-DixmkgbB.js";import"./QueueProcessor-DHxW4yaI.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-BaFfZuup.js";import"./DisplayObject-NwP1D55U.js";import"./StyleDefinition-BK3ROBTO.js";import"./resources-DCd8hSXv.js";import"./edgeProcessing-AsuFhimy.js";import"./testSVGPremultipliedAlpha-D_Za_c1C.js";import"./RenderingContext-4XQ9xHRL.js";import"./ProgramCache-DtSlkqy0.js";import"./SceneModification-S5NSxtWV.js";import"./persistable-C_lytE8t.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-j5iCFPPS.js";import"./SceneLayerWorker-BZcHJfdc.js";import"./makeScheduleFunction-CggzEh3c.js";const q=(e,t)=>{let r=class extends P(Q(N.EventedMixin(e))){constructor(i){super(i),this.sublayer=null,this.parent=null,this.view=null}initialize(){}get suspended(){return!this.canResume()}get updating(){return!this.suspended&&this.isUpdating()}get visible(){var i;return!!((i=this.sublayer)!=null&&i.visible)}set visible(i){this._overrideIfSome("visible",i)}get fullOpacity(){var s,o;const i=p=>p??1;return i((s=this.sublayer)==null?void 0:s.opacity)*i((o=this.parent)==null?void 0:o.fullOpacity)}canResume(){var i,s;return!((i=this.parent)!=null&&i.suspended)&&((s=this.view)==null?void 0:s.ready)&&this.visible||!1}isUpdating(){return!1}};return n([l()],r.prototype,"sublayer",void 0),n([l()],r.prototype,"parent",void 0),n([l({readOnly:!0})],r.prototype,"suspended",null),n([l({type:Boolean,readOnly:!0})],r.prototype,"updating",null),n([l()],r.prototype,"view",void 0),n([l()],r.prototype,"visible",null),n([l()],r.prototype,"fullOpacity",null),r=n([v("esri.views.3d.layers.BuildingSublayerView3D")],r),r};var d;(function(e){e[e.Solid=0]="Solid",e[e.WireFrame=1]="WireFrame",e[e.XRay=2]="XRay"})(d||(d={}));const A=.15,ge=.5*A;function fe(e){switch(e.filterMode.type){case"solid":return{mode:d.Solid};case"wire-frame":return{mode:d.WireFrame,edgeMaterial:ee(e.filterMode.edges,{})};case"x-ray":return{mode:d.XRay}}}function R(e,t){if(t==null)return e.color[3]=0,e.edgeMaterial=null,void(e.pickable=!1);switch(t.mode){case d.Solid:return;case d.WireFrame:return e.color[3]=0,e.edgeMaterial=t.edgeMaterial,void(e.pickable=!1);case d.XRay:return e.color[0]=1,e.color[1]=1,e.color[2]=1,e.color[3]*=A,e.colorMixMode=te.Replace,e.castShadows=!1,e.pickable=!1,void(e.edgeMaterial=be(e.edgeMaterial))}}function be(e){return e==null?null:(c.lastMaterial!==e&&(c.cachedMaterial=we(e),c.lastMaterial=e),c.cachedMaterial)}function we(e){const t=B(e.color);return t[3]*=ge,{...e,color:t}}const c={cachedMaterial:null,lastMaterial:null};class g extends C{constructor(){super(...arguments),this.sublayer=null}get updating(){return!1}get suspended(){return!1}get availableFields(){return[]}get filter(){return null}set filter(t){throw new Error("Not implemented")}queryFeatures(t,r){throw new Error("Not implemented")}queryObjectIds(t,r){throw new Error("Not implemented")}queryFeatureCount(t,r){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(t,r){throw new Error("Not implemented")}highlight(t){throw new Error("Not implemented")}}n([l()],g.prototype,"sublayer",void 0),n([l()],g.prototype,"availableFields",null),n([l()],g.prototype,"filter",null);let a=class extends ae(pe(Z(q(g)))){constructor(){super(...arguments),this.type="building-component-sublayer-3d",this.layerView=null,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!1,this.requiredFields=[],this.progressiveLoadFactor=1,this._queryEngine=null}get i3slayer(){return this.sublayer}get layerUid(){return this.sublayer.layer.uid}get sublayerUid(){return this.sublayer.uid}get layerId(){return this.sublayer.layer.id}get sublayerId(){return this.sublayer.id}get layerPopupEnabledAndHasTemplate(){var e,t;return this.sublayer.popupEnabled&&ue(this.sublayer,(t=(e=this.layerView)==null?void 0:e.view.popup)==null?void 0:t.defaultPopupTemplateEnabled)}initialize(){this._updatingHandles.add(()=>this.mergedFilter,t=>{t!=null&&b.checkSupport(t)?this._i3sFilter==null?this._i3sFilter=new b({viewFilter:t,layerFieldsIndex:this.sublayer.fieldsIndex,loadAsyncModule:r=>this._loadAsyncModule(r),addSqlFilter:(r,i)=>this.addSqlFilter(r,i,this.logError),addTimeFilter:(r,i)=>this.addTimeFilter(r,i)}):this._i3sFilter.viewFilter=t:this._i3sFilter=H(this._i3sFilter)},w),this._updatingHandles.add(()=>[this.sublayer.renderer,this.definitionExpressionFields,this.filterExpressionFields],()=>this._updateRequiredFields()),this._updatingHandles.add(()=>this.sublayer.renderer,t=>this._rendererChange(t),E);const e=()=>this._filterChange();this._updatingHandles.add(()=>this.parsedDefinitionExpression,e),this._updatingHandles.add(()=>{var t;return(t=this._i3sFilter)==null?void 0:t.sortedObjectIds},e),this._updatingHandles.add(()=>{var t;return(t=this._i3sFilter)==null?void 0:t.parsedWhereClause},e),this._updatingHandles.add(()=>this.getTimeFilterDependencies(),e),this._updatingHandles.add(()=>this.mergedFilter,e),this._updatingHandles.add(()=>{var t,r;return[(t=this._i3sFilter)==null?void 0:t.parsedGeometry,(r=this.filter)==null?void 0:r.spatialRelationship]},()=>this._geometryFilterChange()),this._updatingHandles.add(()=>this.parsedFilterExpressions,()=>this._updateSymbologyOverride(),E),this.addResolvingPromise(this._updateRequiredFields())}get lodFactor(){return this.view.qualitySettings.sceneService.object.lodFactor}get parsedFilterExpressions(){return this.sublayer.modelName!=="Overview"&&this.layerView?this.layerView.filterExpressions.map(([e,t])=>{let r;try{r=Y.create(e,this.sublayer.fieldsIndex)}catch(o){return y.getLogger(this).error("Failed to parse filterExpression: "+o),null}if(!r.isStandardized)return y.getLogger(this).error("filterExpression is using non standard function"),null;const i=[],s=r.fieldNames;return oe(s,this.sublayer.fields,{missingFields:i}),i.length>0?(y.getLogger(this).error(`filterExpression references unknown fields: ${i.join(", ")}`),null):[r,t]}).filter(e=>e!=null):[]}get filter(){return this._get("filter")}set filter(e){this._set("filter",b.checkSupport(e)?e:null)}isUpdating(){var e;return super.isUpdating()||(((e=this._i3sFilter)==null?void 0:e.updating)??!1)}_updateSymbologyOverride(){const e=this.parsedFilterExpressions;e.length>0?this._setSymbologyOverride((t,r)=>{for(const[i,s]of e)try{if(i.testFeature(t))return R(r,s)}catch(o){this.logError(o)}return R(r,null)},this.filterExpressionFields):this._setSymbologyOverride(null,null)}get filterExpressionFields(){return f(this.sublayer.fieldsIndex,this.parsedFilterExpressions.reduce((e,[t])=>e.concat(t.fieldNames),new Array))}get availableFields(){const e=this.sublayer,t=e.fieldsIndex;let r=this.requiredFields;if(e.outFields||e.layer.outFields){const i=[...e.outFields||[],...e.layer.outFields||[]];r=[...x(t,i),...r]}return f(t,r)}_createLayerGraphic(e){return new F({attributes:e,layer:this.sublayer.layer,sourceLayer:this.sublayer})}canResume(){return super.canResume()&&O(this.i3slayer.effectiveScaleRange,this.view.terrainScale)&&(!this._controller||this._controller.rootNodeVisible)}async fetchPopupFeaturesFromGraphics(e,t){const r=this._validateFetchPopupFeatures(t);if(r)throw r;if(e.length===0)return[];const i=[],s=[],o=this.sublayer.associatedLayer!=null?await this.sublayer.associatedLayer.load(t):this.sublayer,p=x(this.sublayer.fieldsIndex,await de(o,M(this.sublayer,t)));L(t);const m=new Set;for(const h of e)G(p,h,m)?s.push(h):i.push(h);return s.length===0?i:(this.sublayer.associatedLayer!=null&&await this.sublayer.associatedLayer.load().catch(()=>y.getLogger(this).warn("Failed to load associated feature layer. Displaying popup attributes from cached attributes.")),this.whenGraphicAttributes(s,Array.from(m)).catch(h=>(T(h),s)).then(h=>i.concat(h)))}async _updateRequiredFields(){const e=f(this.sublayer.fieldsIndex,[...this.sublayer.renderer?await this.sublayer.renderer.getRequiredFields(this.sublayer.fieldsIndex):[],...this.definitionExpressionFields,...this.filterExpressionFields]);this._set("requiredFields",e)}_validateFetchPopupFeatures(e){const{sublayer:t}=this,{popupEnabled:r}=t;return r?M(t,e)?void 0:new S("buildingscenelayerview3d:fetchPopupFeatures","Layer does not define a popup template",{sublayer:t}):new S("buildingscenelayerview3d:fetchPopupFeatures","Popups are disabled",{sublayer:t})}getFilters(){var t;const e=super.getFilters();return this.addSqlFilter(e,this.parsedDefinitionExpression,this.logError),(t=this._i3sFilter)==null||t.addFilters(e,this.view,this._controller.crsIndex,this._collection),e}createQuery(){const e={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(e):new V(e)}queryExtent(e,t){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatures(e,t){return this._ensureQueryEngine().executeQuery(this._ensureQuery(e),t==null?void 0:t.signal).then(r=>{if(!(r!=null&&r.features))return r;const i=this.sublayer,s=i.layer;for(const o of r.features)o.layer=s,o.sourceLayer=i;return r})}queryObjectIds(e,t){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQueryEngine(){return this._queryEngine==null&&(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const e=J(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new re({layerView:this,priority:me.FEATURE_QUERY_ENGINE,spatialIndex:new ie({featureAdapter:new se({objectIdField:this.sublayer.objectIdField,attributeStorageInfo:this.sublayer.attributeStorageInfo,getFeatureExtent:e}),forAllFeatures:(t,r)=>this._forAllFeatures((i,s,o)=>t({id:i,index:s,meta:o}),r,K.QUERYABLE),getFeatureExtent:e,sourceSpatialReference:ne(this.sublayer),viewSpatialReference:this.view.spatialReference})})}_ensureQuery(e){return this._addDefinitionExpressionToQuery(e==null?this.createQuery():V.from(e))}};n([l()],a.prototype,"i3slayer",null),n([l()],a.prototype,"layerView",void 0),n([l()],a.prototype,"lodFactor",null),n([l({readOnly:!0})],a.prototype,"parsedFilterExpressions",null),n([l({type:U})],a.prototype,"filter",null),n([l()],a.prototype,"_i3sFilter",void 0),n([l({type:[String],readOnly:!0})],a.prototype,"filterExpressionFields",null),n([l({type:[String],readOnly:!0})],a.prototype,"requiredFields",void 0),n([l({type:[String],readOnly:!0})],a.prototype,"availableFields",null),a=n([v("esri.views.3d.layers.BuildingComponentSublayerView3D")],a);const Fe=a;class _ extends ce{constructor(t){super(t),this.layer=null,this.sublayerViews=null}highlight(t){throw new Error("Not implemented")}}n([l()],_.prototype,"layer",void 0),n([l()],_.prototype,"sublayerViews",void 0);const _e=q(C);let u=class extends he(_){constructor(e){super(e),this.type="building-scene-3d",this.sublayerViews=new $,this._abortController=new AbortController,this._loadingComponents=0,this._pendingWhenSublayerViews=new Map,this.ignoresMemoryFactor=!1}get filterExpression(){var i;const e=this.layer.activeFilterId,t=e!=null?this.layer.filters.find(s=>s.id===e):null,r=t!=null?(i=t.filterBlocks)==null?void 0:i.find(s=>s.filterMode.type==="solid"):null;return r?r.filterExpression:null}get filterExpressions(){const e=this.layer.activeFilterId,t=e!=null?this.layer.filters.find(r=>r.id===e):null;return t!=null&&t.filterBlocks?t.filterBlocks.toArray().map(r=>[r.filterExpression??"",fe(r)]):[]}get updatingProgressValue(){const e=this.sublayerViews,t=this._loadingComponents+(e?e.length:0);return e.reduce((r,i)=>r+i.updatingProgress,0)/t}get visibleAtCurrentScale(){return O(this.layer.effectiveScaleRange,this.view.terrainScale)}isUpdating(){return this._loadingComponents>0||this.sublayerViews&&this.sublayerViews.some(e=>e.updating)}initialize(){le(this.layer.spatialReference,this.view.spatialReference,this.view.viewingMode),this._initializeSubLayerViews(this.layer.sublayers,this)}destroy(){this.sublayerViews&&(this.sublayerViews.forEach(e=>e.destroy()),this.sublayerViews=null),this._abortController=W(this._abortController)}_initializeSubLayerViews(e,t){const r=this,i=this.view;e.forEach(s=>{if(!s.isEmpty)if(s.type==="building-group"){const o=new _e({sublayer:s,view:i,parent:t});this._initializeSubLayerViews(s.sublayers,o)}else s.geometryType==="mesh"&&(this._loadingComponents++,s.load({signal:this._abortController.signal}).then(()=>{const o=new Fe({sublayer:s,layerView:r,view:i,parent:t});this.sublayerViews.push(o);const p=this._pendingWhenSublayerViews.get(s);if(p){for(const m of p)m.resolve(o);this._pendingWhenSublayerViews.delete(s)}this.addHandles([I(()=>o.updating,()=>this.notifyChange("updating"),w),I(()=>o.updatingProgress,()=>this.notifyChange("updatingProgressValue"),w)])}).catch(o=>{j(o)||y.getLogger(this).error(`Error while creating view for sublayer ${s.id}
Layer: ${this.layer.url}
`,o)}).then(()=>{this._loadingComponents--,this.notifyChange("updating"),this.notifyChange("updatingProgressValue")}))})}getGraphicFromIntersectorTarget(e){for(const t of this.sublayerViews.items)if(t.sublayer.uid===e.sublayerUid)return t.getGraphicFromIntersectorTarget(e);return null}async fetchPopupFeaturesFromGraphics(e,t){if(e.length===0)return[];const r=k(e,o=>o.sourceLayer),i=[];for(const[o,p]of r){const m=this._findComponent(o);m!=null&&i.push(m.fetchPopupFeaturesFromGraphics(p,t))}const s=await D(i);return L(t),s.flat()}whenGraphicBounds(e){const t=this._findComponent(e.sourceLayer);return t==null?Promise.reject():t.whenGraphicBounds(e)}getAABBFromIntersectorTarget(e){for(const t of this.sublayerViews.items)if(t.sublayer.uid===e.sublayerUid)return t.getAABBFromIntersectorTarget(e);return null}async whenSublayerView(e){const t=this._findComponent(e);if(t!=null)return t;const r=this._pendingWhenSublayerViews.get(e),i=z();return r?r.push(i):this._pendingWhenSublayerViews.set(e,[i]),i.promise}_findComponent(e){return this.sublayerViews.find(t=>e===t.sublayer)}highlight(e){e instanceof F?e=[e]:e instanceof $&&(e=e.toArray());const t=[];if(Array.isArray(e)&&e.length>0&&e[0]instanceof F){const r=e,i=new Map;for(const s of r){let o=i.get(s.sourceLayer);o==null&&(o=[],i.set(s.sourceLayer,o)),o.push(s)}this.sublayerViews.forEach(s=>{const o=i.get(s.sublayer);o&&t.push(s.highlight(o))})}return X(t)}get usedMemory(){return this.sublayerViews.reduce((e,t)=>e+t.usedMemory,0)}get unloadedMemory(){return this.sublayerViews.reduce((e,t)=>e+t.unloadedMemory,0)}};n([l()],u.prototype,"sublayerViews",void 0),n([l({readOnly:!0})],u.prototype,"filterExpression",null),n([l({readOnly:!0})],u.prototype,"filterExpressions",null),n([l(ye)],u.prototype,"updatingProgress",void 0),n([l({readOnly:!0,dependsOn:[]})],u.prototype,"updatingProgressValue",null),n([l({readOnly:!0})],u.prototype,"visibleAtCurrentScale",null),u=n([v("esri.views.3d.layers.BuildingSceneLayerView3D")],u);const As=u;export{As as default};
